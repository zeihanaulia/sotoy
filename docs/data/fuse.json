{"keys":[{"path":["title"],"id":"title","weight":1,"src":"title","getFn":null},{"path":["body"],"id":"body","weight":1,"src":"body","getFn":null}],"records":[{"i":0,"$":{"0":{"v":"This page has not yet sprouted","n":0.408},"1":{"v":"[Dendron](https://dendron.so/) (the tool used to generate this site) lets authors selective publish content. You will see this page whenever you click on a link to an unpublished page\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/images/not-sprouted.png)","n":0.189}}},{"i":1,"$":{"0":{"v":"Root","n":1},"1":{"v":"# Welcome to Dendron\n\nThis is the root of your dendron vault. If you decide to publish your entire vault, this will be your landing page. You are free to customize any part of this page except the frontmatter on top.\n\n## Lookup\n\nThis section contains useful links to related resources.\n\n- [Getting Started Guide](https://link.dendron.so/6b25)\n- [Discord](https://link.dendron.so/6b23)\n- [Home Page](https://wiki.dendron.so/)\n- [Github](https://link.dendron.so/6b24)\n- [Developer Docs](https://docs.dendron.so/)\n","n":0.132}}},{"i":2,"$":{"0":{"v":"Templates","n":1},"1":{"v":"\n## Summary\n\nThis hierarchy contains a list of useful templates that you can use in your own notes\n","n":0.243}}},{"i":3,"$":{"0":{"v":"Task List","n":0.707},"1":{"v":"\n### Important:\n\n- [x] Item 1\n- [ ] Item 2\n\n### Planned:\n\n- [ ] Item 1\n- [ ] Item 2","n":0.236}}},{"i":4,"$":{"0":{"v":"Project","n":1},"1":{"v":"\n## Goal\n<!-- What are you trying to accomplish -->\n\n## Context\n<!-- Background information -->\n\n## Success Criteria\n<!-- milestones for this project -->\n\n## Log\n<!-- For longer projects, keep a rough log of major events-->\n\n## Outputs\n<!-- any outputs that were generated from this project. eg. slides, videos, etc-->\n\n<!-- Everything below this line is work needed to achieve the stated goal-->\n\n## Tasks\n<!-- use this space to track current tasks. alternatively, you can also link to your daily journal note -->\n\n## Notes\n<!-- use this space for arbitrary notes -->\n\n## Lookup\n<!-- relevant prior work or resources -->\n","n":0.105}}},{"i":5,"$":{"0":{"v":"Writing","n":1},"1":{"v":"\n## Goal\n<!-- What are you trying to accomplish -->\n\n## Context\n<!-- Background information -->\n\n## Success Criteria\n<!-- milestones for this project -->\n\n## Log\n<!-- For longer projects, keep a rough log of major events-->\n\n## Outputs\n<!-- any outputs that were generated from this project. eg. slides, videos, etc-->\n\n<!-- Everything below this line is work needed to achieve the stated goal-->\n\n## Tasks\n<!-- use this space to track current tasks. alternatively, you can also link to your daily journal note -->\n\n## Notes\n<!-- use this space for arbitrary notes -->\n\n## Lookup\n<!-- relevant prior work or resources -->\n- [[proj.]]\n- [[proj..outline]]\n- [[proj..v1]]\n- [[proj..v2]]\n- [[proj..v3]]","n":0.103}}},{"i":6,"$":{"0":{"v":"People","n":1},"1":{"v":"\n## Summary\n\n## First Encounter\n\n## Work\n\n### Current\n- position:\n- place:\n- start:\n- end:\n- location:\n\n### Past\n\n","n":0.289}}},{"i":7,"$":{"0":{"v":"Module","n":1}}},{"i":8,"$":{"0":{"v":"Topic","n":1},"1":{"v":"\n## Summary\n<!-- What is this module about -->\n\n## Lifecycle\n<!-- Startup process for this module -->\n\n## Changelog\n<!-- All changes -->\n","n":0.229}}},{"i":9,"$":{"0":{"v":"Quickstart","n":1},"1":{"v":"\n## Prerequisites\n<!-- What needs to be done beforehand -->\n\n## Build \n<!-- How to build-->\n\n## Run\n<!-- How to run -->\n\n## Troubleshooting\n<!-- Common issues -->","n":0.209}}},{"i":10,"$":{"0":{"v":"Qa","n":1}}},{"i":11,"$":{"0":{"v":"Test","n":1},"1":{"v":"\n## Unit Testing\n\n### Writing\n<!-- Writing unit test -->\n\n### Executing\n<!-- Running unit test -->\n\n## Integration Testing\n\n### Writing\n\n### Executing\n\n## Manual Testing","n":0.229}}},{"i":12,"$":{"0":{"v":"Debug","n":1},"1":{"v":"\n\n## Debug\n<!-- How to step through tests using debugger -->\n\n### Breakpoints\n<!-- Setting Breakpoints -->\n\n","n":0.267}}},{"i":13,"$":{"0":{"v":"Dev","n":1},"1":{"v":"\n## Build\n\n### Prerequisites\n<!-- What is needed to start development -->\n\n### Steps\n<!-- How to compile -->\n\n## Run\n<!-- How to run the program from the current source code -->\n","n":0.192}}},{"i":14,"$":{"0":{"v":"Build","n":1},"1":{"v":"\n## Cleanup\n<!-- How to clean the project -->\n\n","n":0.354}}},{"i":15,"$":{"0":{"v":"Arch","n":1},"1":{"v":"\n## Components\n<!-- Major components -->\n\n## Lifecycle\n<!-- Major lifecycles -->\n","n":0.333}}},{"i":16,"$":{"0":{"v":"Journal","n":1}}},{"i":17,"$":{"0":{"v":"Daily","n":1}}},{"i":18,"$":{"0":{"v":"The Five Minute Journal","n":0.5},"1":{"v":"\n<!--\nBased on the journaling method created by Intelligent Change:\n- [Intelligent Change: Our Story](https://www.intelligentchange.com/pages/our-story)\n- [The Five Minute Journal](https://www.intelligentchange.com/products/the-five-minute-journal)\n-->\n\n## Morning\n\n<!-- Fill out this section after waking up -->\n\n### Gratitude\n\nI am grateful for:\n\n1.\n2.\n3.\n\n### What would make today great?\n\n1.\n2.\n3.\n\n### Daily affirmations\n\nI am...\n\n## Evening\n\n<!-- Fill out this section before going to sleep, reflecting on your day -->\n\n### Amazing things that happened today\n\n1.\n2.\n3.\n\n### How could I have made today even better?\n\nI could have made today better by\n","n":0.119}}},{"i":19,"$":{"0":{"v":"Contacts","n":1},"1":{"v":"\n## Professional Contacts\n\n|Name|Tags|\n|:---|:---:|\n|Chris Vance|[[work]], [[neighbor]]|\n|Samantha Roberts|[[work]], [[fundraising-team]]|\n\n## Personal Contacts\n\n|Name|Tags|Notes|\n|:---|:---:|:---:|\n|Justin Sharp|[[college]]|Moving to Seattle soon|\n|Samantha Roberts|[[neighbor]]|Help with Dogsitting next week|\n","n":0.236}}},{"i":20,"$":{"0":{"v":"Schemas","n":1}}},{"i":21,"$":{"0":{"v":"Module","n":1},"1":{"v":"\n## Summary\n- status: WIP\n\nThis describes the [module schema](module.schema.yml) in more detail. Modules are anything that encapsulate logic with software. They cover everything enmerated in `module.schema`. \n\nDendron uses the schema to describe all of the [packages](https://wiki.dendron.so/notes/32cdd4aa-d9f6-4582-8d0c-07f64a00299b.html#summary) it its monorepo. \n\nThe module schema is meant to be used as part of other schemas. For example, in the template vault, it is used in both `pkg.schema` and `service.schema`. This is because both packages (eg. React, NextJS, etc) and services (eg. AWS S3, Github, Stripe, etc) share the same underlying structure (eg. quickstart, concepts, architecture, lifecycles, etc)\n\n## Nodes\n\n### quickstart\n\nHow to get started as a user of the given module\n\n### concepts\n\n### concepts\n- example: [[Concepts|dendron.concepts]]\n\nAny terms or concepts we should understand\n\n### architecture\n- alias: arch\n\nThis goes over the general architecture.\n\nThis should include:\n- [ ] mermaid diagram of major lifecylce events (eg. startup, shutdown, main feature) and components\n- [ ] paragraph about major lifecycle events and components\n\nAn archietcture node can have children if it exceeds 800 words. At that point, every lifecycle/component can be a direct child \n\n### dev\n\nThis goes into specifics of the development process. Also includes cookbooks on doing specific operations\n\n#### quickstart\n\nThis goes into how to get started developing this module\n\n- Sections:\n  - Pre-Req: what is needed before you start\n  - Steps: How to setup the project for development\n\n### faq\n\nAny commonly asked questions can be put here\n\n### ops\n- example: [[Ops|pkg.dendron-plugin.ops]]\n\nHow do we diagnose problems with this module.\n\n### qa\n\nHow do we maintain quality assurance on this module\n\n#### test\n\nHow do we functionally test that everything is correct\n\n#### performance\n\nHow do we test that the performance is sufficient?\n\n### quickstart\n- example: [[Quickstart|pkg.dendron-plugin.quickstart]]\n\nHow do we get started with the module as a user\n\n### topic\n- namespace: true\n\nThis is for any major component of the module and might be a module itself.\n\n### wip\n\nWork in progress represents code that is currently being refactored","n":0.058}}},{"i":22,"$":{"0":{"v":"Today I Learned","n":0.577}}},{"i":23,"$":{"0":{"v":"bagaimana-instrumentasi-golang-dengan-elastic-APM","n":1},"1":{"v":"\n\nElastic APM (Application Performance Monitoring) dapat membantu kita dalam hal visibility distributed workload.\nUntuk mendapatkan insight kita haru membuat instrumentasi pada aplikasi kita.\n\n## Membuat webrequest\n\nElastic APM Go Agent memiliki API \"tracing\" untuk menerima request ke server.\nSecara default APM akan mengirimkan data ke http://localhost:8200. \nJika kita menggunakan APM Server selain di localhost dan melakukan load environment variable pada aplikasi.\nMaka khusus untuk variable yang terkait APM sebaiknya di init ketika running, bukan diaplikasi karena ada issue ini [apm-agent-go #618](https://github.com/elastic/apm-agent-go/issues/618).\n\n```go\npackage main\n\nimport (\n\t\"net/http\"\n`\n\t\"github.com/go-chi/chi/v5\"\n\t\"github.com/go-chi/chi/v5/middleware\"\n)\n\nfunc hello(w http.ResponseWriter, r *http.Request) {\n\tw.Write([]byte(\"welcome\"))\n}\n\nfunc main() {\n\tr := chi.NewRouter()\n\tr.Use(middleware.Logger)\n\tr.Get(\"/\", hello)\n\thttp.ListenAndServe(\":3000\", r)\n}\n```\n\n## Setup Kibana dan APM\n\n### Local\n\nGw asummsikan semua sudah menggunakan docker, sehingga tinggal running dengan docker compose\n\n```Dockerfile\nversion: '3.7'\n\nservices:\n\n  elasticsearch:\n    image: docker.elastic.co/elasticsearch/elasticsearch:7.16.3\n    environment:\n      - bootstrap.memory_lock=true\n      - cluster.name=docker-cluster\n      - cluster.routing.allocation.disk.threshold_enabled=false\n      - discovery.type=single-node\n      - ES_JAVA_OPTS=-XX:UseAVX=2 -Xms1g -Xmx1g\n    ulimits:\n      memlock:\n        hard: -1\n        soft: -1\n    volumes:\n      - elasticsearch:/usr/share/elasticsearch/data\n    ports:\n      - 9200:9200\n    healthcheck:\n      interval: 20s\n      retries: 10\n      test: curl -s http://localhost:9200/_cluster/health | grep -vq '\"status\":\"red\"'\n\n  kibana:\n    image: docker.elastic.co/kibana/kibana:7.16.3\n    depends_on:\n      elasticsearch:\n        condition: service_healthy\n    environment:\n      ELASTICSEARCH_URL: http://elasticsearch:9200\n      ELASTICSEARCH_HOSTS: http://elasticsearch:9200\n    ports:\n      - 5601:5601\n    healthcheck:\n      interval: 10s\n      retries: 20\n      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5601/api/status\n  \n  apm-server:\n    image: docker.elastic.co/apm/apm-server:7.16.3\n    depends_on:\n      elasticsearch:\n        condition: service_healthy\n      kibana:\n        condition: service_healthy\n    cap_add: [\"CHOWN\", \"DAC_OVERRIDE\", \"SETGID\", \"SETUID\"]\n    cap_drop: [\"ALL\"]\n    ports:\n    - 8200:8200\n    command: >\n       apm-server -e\n         -E apm-server.rum.enabled=true\n         -E setup.kibana.host=kibana:5601\n         -E setup.template.settings.index.number_of_replicas=0\n         -E apm-server.kibana.enabled=true\n         -E apm-server.kibana.host=kibana:5601\n         -E output.elasticsearch.hosts=[\"elasticsearch:9200\"]\n    healthcheck:\n      interval: 10s\n      retries: 12\n      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/\nvolumes:\n\telasticsearch:\n\t\n```\n\n### Trial Elastic Cloud \n\nKalau gak mamu ribet, bisa cobain trial dari [elastic cloud](https://www.elastic.co/cloud/). Kita akan dapat trial selama 14 hari untuk melakukan explorasi fitur firur di APM. Setupnya cukup mudah tinggal klik-klik aja.\nSetelah itu masuk ke menu APM, lalu kebagian agent untuk mendapatkan config yang seharusnya.\n\nKita membutuhkan data environtment variable untuk aplikasi.\n\n```bash\n# Initialize using environment variables:\n\n# Set the service name. Allowed characters: # a-z, A-Z, 0-9, -, _, and space.\n# If ELASTIC_APM_SERVICE_NAME is not specified, the executable name will be used.\nexport ELASTIC_APM_SERVICE_NAME=\n\n# Set custom APM Server URL (default: http://localhost:8200)\nexport ELASTIC_APM_SERVER_URL=https://7ccb1cfa41f5426ba7f29ee7123e8f4c.apm.us-central1.gcp.cloud.es.io:443\n\n# Use if APM Server requires a secret token\nexport ELASTIC_APM_SECRET_TOKEN=0aaRb0gVrRkaSQdkdR\n\n# Set the service environment\nexport ELASTIC_APM_ENVIRONMENT=\n```\n\n## Instrumenting application\n\nModifikasi webserver yang kita buat sebelumnya, dengan menambahkan `apmhttp.Wrap(r)`\n\n```go\npackage main\n\nimport (\n\t\"net/http\"\n`\t...\n\n\tapmchi \"go.elastic.co/apm/module/apmchiv5\"\n\t\"go.elastic.co/apm/module/apmhttp\"\n)\n\n...\n\nfunc main() {\n\tr := chi.NewRouter()\n\tr.Use(apmchi.Middleware())\n\t...\n\thttp.ListenAndServe(\":3000\", apmhttp.Wrap(r))\n}\n```\n\napmchi adalah middleware yang isinya pembuatan instrument untuk APM.\nbukan hanya chi, ada beberapa library lain yang disupport secara resmi.\nbisa dilihat disini [https://github.com/elastic/apm-agent-go/tree/main/module](https://github.com/elastic/apm-agent-go/tree/main/module) dan dokumentasinya di [Built-in instrumentation modules](https://www.elastic.co/guide/en/apm/agent/go/master/builtin-modules.html).\n\n\n","n":0.051}}},{"i":24,"$":{"0":{"v":"Staff Engineer","n":0.707},"1":{"v":"\nStaff Engineer adalah engineer yang memiliki kemampuan dapat melihat big picture dari organisasi dan dituangkan kedalam teknologi.\nSetiap organisasi tidak luput dari yang namanya membuat keputusan seperti memilih teknologi, memutuskan apa yang mau dibangun, berinversasi dalam sistem atau menghentikan.\n\nMereka berkerja bukan hanya untuk satu tim, mereka akan memimpin beberapa tim.\n\n## Sumber bacaan\n\n- [The Staff Engineer](https://learning.oreilly.com/library/view/the-staff-engineers/9781098118723/ch01.html)","n":0.136}}},{"i":25,"$":{"0":{"v":"Prometheus","n":1},"1":{"v":"\n## Apa itu Prometheus\n\n### Cara kerja prometheus\n\n## Apa itu PromQL\n\nPromQL(Prometheus Query Language) adalah functional query yang disediakan oleh prometheus agar user dapat melakukan query ke data yang telah disimpan secara real-time dan melakukan segala macam analisis, aggregation dan operasi.\n\nUntuk memahami promql ada baiknya kita mengetahui dulu tipe data yang disimpan, yaitu time-series data.\n\n### Apa itu time-series data\n\nTime-series data didefinisikan sebagai seraikaian data yang diurutkan berdasarkan waktu.\nMisalnya, Kalau lo mau mengukur penggunaan CPU, data yang akan dikumpulkan akan seperti ini.\n\n| Timestamp     | CPU Utilization (%) |\n|---------------|---------------------|\n| 1591709873808 | 67                  |\n| 1591709884270 | 68                  |\n\nDi Prometheus, time-series object dibuat pada setiap metrik yang mau dimonitor dan setiap object itu unik diidentifikasi dengan nama metric yang berisi key-value.\nYang mana key berisi timestamp dan value adalah nilai yang mau diukur. Setiap key-value disebut dengan istilah \"Sample\".\nSelain itu prometheus membrikan kemampuan untuk menambahkan label untuk memperkaya data atribut pada metrics.\nMisalnya, Kalau lo mau mengukur berapa banyak request pada suatu endpoint, lo bisa membuat satu metrics `http_request_duration_seconds_count`.\nlalu lo tambahkan label untuk memperinci diendpoint mana, jadi `http_request_duration_seconds_count{job=\"order-service\", path=\"POST_/dispatch\"}`.\nDengan memperkaya data, lo bisa dengan mudah melakukan filter ketika melakukan monitoring aplikasi lo.\n\n### Selectors\n\nAda beberapa cara untuk melakukan selecting data. \n\n#### Select Metric\n\n#### Filter by Label\n\nSetelah selecting metrics kita bisa melakukan filter berdasarkan label, ada beberapa operator dasar yang bisa kita gunakan\n\n| Description                                                                                                    | example                                                   |\n|----------------------------------------------------------------------------------------------------------------|-----------------------------------------------------------|\n| ambil data dengan value \"heap\"                                                                                 | jvm_memory_bytes_used {area=\"heap\"}                       |\n| ambil data dengan value tidak sama dengan \"heap\"                                                               | jvm_memory_bytes_used {area!=\"heap\"}                      |\n| cari data pada label job dengan value berisi 'fed'                                                             | jvm_memory_bytes_used {job=~\"fed.+\"}                      |\n| cari selain data pada label job dengan value berisi 'fed'                                                      | jvm_memory_bytes_used {job!~\"fed.+\"}                      |\n| cari data pada label job dengan value berisi awalan 'f' atau 'j'                                               | jvm_memory_bytes_used {job=~\"f.+\\|j.+\"}                   |\n| cari data pada label area dengan value berisi 'heap' atau 'nonheap'                                            | jvm_memory_bytes_used {area=~\"heap\\|nonheap\"}             |\n| cari data pada label area dengan value berisi 'heap' atau 'nonheap' dan pada label job dengan awalan huruf 'j' | jvm_memory_bytes_used {area=~\"heap\\|nonheap\", job=~'j.+'} |\n\n#### Select to return range vectors\n\nSelain dasar query tersebut, lo juga bisa mengembalikan nilai sample untuk setiap time series yang bebeda.\nlo bisa menambahkan '[10m]' diakhir label, misalnya jvm_memory_bytes_used {area=\"heap\"}[10m] artinya kita akan mengambil data dari query dalam rentang waktu 10 menit.\nselain menit kita juga bisa \n\n- s: seconds\n- m: minutes\n- h: hours\n- d: days\n- w: weeks\n- y: years\n\n#### Select past/historical data\n\nKalau sebelumnya kita bisa mengambil data berdasarkan range, kita bisa juga melakukan mengambil data yang sudah lalu. misal\n\n`jvm_memory_bytes_used Offset 7d`\n\n","n":0.05}}},{"i":26,"$":{"0":{"v":"Preparing Performance Review","n":0.577},"1":{"v":"\nTulisan ini catatan dari artikel [Preparing for performance reviews ahead of time](https://newsletter.pragmaticengineer.com/p/preparing-for-performance-reviews)\n\nBagaimana cara mempersiapkan performance review?\n\n## Mulai diawal; kumpulkan context dan set goals\n\nSesuatu yang lo harus segera lakukan, idealnya lo lakukan sebulan sebelumnya.\n\nIdentifikasi dan mengerti apa faktor yang paling penting untuk tim dan perusahaan tempat lo berkerja.\nSalah satu caranya adalah dengan bertanya ke manager.\n\n### Tanya ke manager\n\n- Apa tujuan tim ini\n- Bagaimana tim ini terlibat didalam perusahaan\n- Apa goal dari manager\n- Apa yang paling penting menurut manager\n\nDengan mengerti hal-hal ini lo akan banyak membantu di tim\n\n### Tanya kepada teman-teman yang ada di tim\n\nTanyakan kepada mereka apa yang mereka lihat sebagai tujuan paling penting bagi tim dan perusahaan.\n\n### Dengarkan company leaders dan executive\n\nPerusahaan yang baik jelas tentang tujuan mereka. Temukan apa yang paling penting caranya dengan menghadiri meetings, menonton rekaman dan membaca email yang dikirim leader yang membahas prioritas.\n\nKalau di big tech lo perlu mendengarkan beberapa seperti himbawan oraganisasi level, product org, parent organisasi, tech organisasi.\n\n### Tanyakan kepada orang orang yang berpengaruh\n\nCarilah 1:1 dengan rekan kerja yang memainkan peran kunci dan juga dapat diakses.\n\n\nSelain lo bertanya dan memahami tujuan dan apa hal yang penting bagi organisasi. lo perlu juga untuk memahami cara kerja dari sistem performance review.\n\nLo perlu mengumpulkan details dari sistem performa review, dengan cara seperti ini.\n\n- Siapa yang membuat keputusan akhir? Biasanya si manager, tapi perlu diklarifikasi.\n- Siapa yang memiliki major input dari performa review lo?\n- Kapan review ini dilaksanakan? Cek tanggal tanggal penting yang perlu diingat. Kapan deadline dari peer review atau self review? Kapan waktu kalibrasi.\n- Saran tentang apa yang dapat memastikan review ini adil. Tanya ke teman teman.\n\nBicara dengan manager tentang goals lo. Setelah lo mengumpulkan context apa yang terjadi disekitar lo. lo harus punya tujuan sendiri.\nDan tujuan lo itu harus mendukung tim dan perusahaan atau mungkin manager. Dan tentu saja, mereka harus membantu lo.\n\nSetelah lo memiliki daftar tujuan, lo kasih ke manager untuk meminta feedback. Kalau lo punya mentor didalam organisasi, share tujuan lo ini.\nDan tanya apa yang mereka pikirkan? Tujuan mana yang paling mereka sukai? Apa yang kurang? Apa suggestion yang mereka berikan?\n\nSepakati tujuan lo dengan manager lo. Salah satu cara terbaik untuk berada dipihak lo adalah dengan mereka mendukung tujuan lo.\n\nPastikan tujuan lo dituliskan.\n\n## The Power of Habit\n\nBiasanya performance reveiew ini berjalan sekali atau dua kali dalam setahun. Maka dari itu lo perlu membentuk kebiasaan dalam mencatat pekerjaan harian lo.\n\n**Keep track of your wins** maksudnya adalah performance review biasanya bias, maka ada baiknya lo catat kejadian apa yang bagus dari hari hari lo kebelakang.\nUntuk mencounter ini, lo perlu melampirkan bukti, screenshot prais ini emails atau chat atau bukti lain.\n\n**Keep a \"Work Log\"** Ini cukup mudah dengan membuat catatan lo ngapain aja dan lo membantu apa aja.\n\n![Work Log](assets/preparing-performance-review-work-log.png)  \n\nShare progress dengan manager lo. Buat regular 1:1 untuk catch up dengan manager setiap minggu.\nLalu bahas tentang pekerjaan yang telah lo lakukan, bicarakan tentang kemenangan lo, apa tantangan lo, tunjukan ke manager lo kalo lo mengelola semua task secara efektif.\n\nSebagai manager, biasanya tidak tau seberapa banyak pekerjaan yang dilakukan oleh rekan kerja. Dan biasanya pekerjaan dari engineer yang lebih experience yang mengambil banyak inisiatif. Jika engineer seperti ini tidak membagikan detailnya, manager tidak akan tau apa yang sudah dilakukan.\n\nJadi karena alasan seperti ini lebih baik lo membagikan apa yang lo lakukan dari pada lo berasumsi manager lo sudah tau.\n\nKalau lo ada di posisi leadership. lo tulis dan kirimkan weekly  [\"5-15 update\"](https://lethain.com/weekly-updates/). Maksudnya, lo tulis selama 15 menit dan tidak lebih dari 5 menit untuk membacanya.\n\nBiasanya strukturnya seperti ini\n\n- Wins \n- Challenges\n- Focus for the next week\n- What I learned\n\nAda juga yang seperti ini\n\n- Top-of mind things\n- Progress this week\n- Goals for the next week\n- Interesting things I’ve come across\n\nUpdate seperti ini lo perlu kirim setiap minggu atau dua minggu sekali\n\n\n**Get things done.** Semua ini gak ada gunanya kalo cuma sok sibuk tapi gak ada sesuatu yang lo deliver. Lo harus membangun reputasi lo sebagai seseorang yang \"menyelesaikan sesuatu\". [Internal politics for software engineers and managers:](https://newsletter.pragmaticengineer.com/p/internal-politics-part-2)\n \n>“‘Great’ is subjective to your environment; if possible, make sure it’s the right balance of high quality and speed. At startups, ‘great’ might lean towards shipping things quickly, while at larger companies, ‘great’ might mean well-tested and clean code, or code changes which are straightforward to review, and maintainable solutions.\n>\n> So, get familiar with what ‘great’ means in the context of your engineering organization, and gather regular feedback from your peers and managers to get a sense of how close your work is to this. Once you build up a reputation as someone who does great work, this will help others trust you.”\n\n**Help others.** Lo gak akan bisa melangkah jauh, kalau lo cuma mau melakukan apa yang lo suka aja. Lo harus menyeimbangkan pekerjaan yang membantu lo dengan pekerjaan yang membantu tim dan perusahaan. Jadi coba menawarkan bantuan ketika lo melihat kesempatan. Ini bisa berupa hal hal sepele seperti code review, menawarkan code review, memberikan feedback project dan merencanakan dokument.\n\n**Capture this work you do to help others**. Salah satu sisi negatif dari membantu orang itu adalah lo jadi terlalu banyak membantu dan malah pekerjaan lo jadi gak bisa diakui.\n\nSaran, pastikan tidak ada pekerjaan yang berarti tapi tidak diketahui, setidaknya oleh manager lo. Disinila work log dapat membantu dan juga lo dapat melihat apakah lo akan menghabiskan waktu hanya dengan membantu orang lain, kalau iya lo perlu re evaluasi penggunaan waktu lo.\n\n**Ask for specific feedback, every now and then.**. lo perlu meminta feedback, salah satu masalah klasik adalah tiba tiba manager lo memberikan feedback yang negatif dan lo baru tau ketika di review akhir dan lo merasa manager gak kasih tau lo. jadi dari pada lo berasumsi semua baik baik saja ada baiknya lo yang mulai bertanya.\n\nBeberapa situasi dimana lo bisa mencari feedback.\n\n- **Fasilitasi meeting.** Lo setup meeting buat tim lo. lalu setelahnya lo bertanya pada perserta yang hadir\n  - bagaimana pendapat lo tentang meeting tadi\n  - apa yang bisa lo lakukan agar bisa jadi lebih baik\n- **Resolving an outage.** Lo menyelesaikan issue di production, lalu lo berfikir lo telah melakukan pekerjaan yang hebat? apa benar? lo bisa pastikan ini ke manager lo\n- **Presenting in front of a larger group.** Ketika lo presentasi didepan banyak orang lo mungkin merasa hebat atau sepertinya ada yang kurang. Kenapa gak tanya ke salah satu yang hadir disana tentang lo, apakah lo melakukan dengan baik. Lebih baik lagi kalau lo rekam dan lo rewatch dan melakukan analisa terkait performa persentasi lo.\n- **Proposing a new initiative.** Ketika lo mengajukan project baru ke product manager dan engineering manager dan project itu mendapat lampu hijau. ada baiknya lo bertanya ke beberapa orang yang terlibat dalam proses tersebut bagaimana menurut mereka.\n- **Leading a project** Selama project lo perlu bertanya apa yang disukai mengenai proses yang ada di project ini apa yang membingungkan? Setelah project selesai lakukan retrospektif dan tentu undang teman untuk membagikan feedback bagaimana kinerja lo sebagai project lead dan apa yang bisa lo improve.\n- **Criticizing someone else’s code.** ketika lo memberikan feedback ke kode seseorang, kalau lo gak yakin apakah lo mereview dengan cara terlalu lemah atau keras lo bisa minta feedback ke peer lain apakah review yang gw tulis ini baik atau tidak.\n\nLo harus selalu minta feedback dari apa yang lo lakukan pertama kali dan perlu diingat lo harus menganggapi feedback dengan serius, dan ingat itu adalah opini bukan arahan. Dengarkan apa yang mereka katakan lalu cari tau apakah pengamatannya valid dan adakah sesuatu yang mau lo ubah dikedepannya.\n\nCaritau feedback mana yang perlu lo tindak lanjuti. Dan semuanya diawali dengan meminta feedback kalo gak ada ya lo gak punya sesuatu yang perlu pikirin nantinya.\n\n**Invest in connections beyond your manager and peer group.** lo akan menghabiskan banyak waktu lo dengan peer dan manager. Tapi kalau lo diposisi senior lo perlu lebih banyak kolaborasi dengan manager dan peer di luar dari grup lo.  \n\n![Politic](assets/preparing-performance-review-politic.png)  \n\nPertimbangkan apakah lo akan lebih banyak menghabiskan waktu dengan yang lain, coba membantu dan membangun relasi dengan tim lain. tapi perlu diingat lo melakukan ini bukan hanya sebatas nilai untuk performa review lo. tapi lo perlu membuat dampak positi di organisasi lo.\n\n## Ahead of performance review\n\n\n## Perparing to receive rating\n## How to not be “that person” who only cares about their own performance","n":0.027}}},{"i":27,"$":{"0":{"v":"Intermitten Fasting","n":0.707},"1":{"v":"\nIntermitten fasting\n\n- <https://youtu.be/rsZqOh6fR20>\n- <https://youtu.be/PqPVdf9VN2c>\n","n":0.5}}},{"i":28,"$":{"0":{"v":"Belajar Coaching","n":0.707},"1":{"v":"\n- training\n  - transfer ilmu\n  - tugas\n    - membuat yang tadinya gak bisa jadi bisa\n  - type: outside in\n\n- mentoring\n  - upgrade\n  - nasihat\n  - menjadi lebih\n    - cepat\n    - efisien\n    - santai\n    - tenang\n  - type: outside in\n\n- consulting\n  - memberikan saran untuk menemukan solusi\n  - type: outside in\n\n- counseling\n  - mendengarkan dan menyembuhkan issue emosional dan kejiawaan\n  - membahas masalalu, truma\n\n- coaching\n  - membangun kesadaran diri melalui penggalian potensi dalam diri untuk mencapai suatu tujuan\n  - bintangnya ada coachernya\n  - tidak harus jadi expert\n    - tapi harus bisa menggali informasi\n      - kesadaran diri\n      - keyakinan\n      - ide ide\n      - solusi\n      - aksi\n      - komitmen\n  - bertanya dan mencari opini dari employee\n  - tidak memberikan nasihat\n  - employee centric\n  - dorong employee untuk mensolve problem\n  - membahas masa depan\n  - type: inside out\n  - coaching bisa digunakan untuk semua category team\n    - coaching for development\n      - untuk yang low performer\n    - coaching for transactional\n      - untuk bisa cepat beradaptasi\n  - kapan digunakan\n    - 1 on 1\n    - performance management conversation\n    - development conversationn\n  - effective coaching\n    - membangun hubungan dan kepercayaan (percuma kalau punya kemampuan coaching tapi gak ada yang mau wkwkwk)\n      - credibility\n        - terbukti\n        - image\n      - reliability\n        - contoh\n          - project bisa diselesaikan tepat waktu\n      - intimacy\n        - kedekatan emosional\n      - selalu mementikan diri sendiri\n      - credibility , reliability, intimacy (/) selalu mementikan diri sendiri\n        - hasilnya dapat dipercaya\n    - mendengarkan aktif (mendengarkan tanpa judgement)\n      - mendengarkan diri sendiri (lv. 1)\n        - fokus: saya dan asumsi\n      - mendengar untuk memahami (lv. 2)\n        - fokus: cocahee dan  situasi coache\n      - global listeing (lv. 3)\n      - caranya (SEA)\n        - situasi\n        - emosi\n        - ack / pengakuan\n    - bertanya efektif (menggali ide)\n      - do\n        - pertanyaan terbuka\n        - pertanyaan fokus pada solusi\n        - pertayaan yang menjelaskan situasi saat ini dan pertanyaan yang menjelaskan situasi masa depan\n          - apa yang menjadi kesulitan kamu?\n      - don't\n        - pertanyaan tertutup\n        - pertanyaan mengarahkan\n        - pertanyaan berlapis\n        - \"mengapa\"\n      - coaching FIRA\n        - fokus pada tujuan\n          - apa agenda yang ingin dibahas?\n          - apa fokus pembahasan yang anda inginkan?\n          - apa yang membuat tujuan ini penting untuk anda?\n        - identifikasi GPS (gap, posibility, solution)\n          - apa kesenjangan yang anda ketahui pada situasi saat ini\n          - apa ide anda untuk dapat mengatasi situasi tersebut\n        - rencana aksi\n          - apa langkah langkah\n          - bagaimana strategi anda agar rencana tersebut dapat berjalan sesuai dengan harapan?\n          - apa sumber daya yang anda butuhkan?\n        - akuntabilitias & komitmen\n          - apa kesimpulan dari percakapan kita tadi\n          - bagaimana anda memonitor komitment anda ?\n  - pertanyaan\n    - coaching itu dari employeenya yang minta atau coachnya yang datang karena ada problem?\n      - bisa dari mana saja\n    - tadi kan coach itu tidak harus expert, bagaimana jika memang orang itu memang stuck dan butuh panduan? apa yang akan dilakukan coach? apa masih perlu ke coach? atau langsung aja consulting ke expert?\n      - sebagai coach akan menangkap situasi dan emosi dari coachee (susah euy!!)\n      - sebagai leader coach bisa tukar topi sebagai mentor","n":0.045}}},{"i":29,"$":{"0":{"v":"Apa Itu Automation Workflow","n":0.5},"1":{"v":"\nAutomation Workflow atau memproses secara otomatis.\nHal-hal yang rutin dan sering sebaiknya dibuat otomatisasinya.\nAkan menghemat waktu dan mempermudah hidup kita.\n\nAda beberapa alasan kenapa kita harus melakukan otomatisasi.\n\n1. Sering berulang\n\n    Kalau kita setiap hari / minggu / bulan membuat taks yang sama terus menerus,\n    ada baiknya mulai memikirkan otomatisasi. Memang membangun proses otomatisasi\n    memerlukan waktu dan usaha yang gak sedikit, tapi kalau sering dan sangat membantu ya gak ada salahnya\n\n2. Standarisasi\n\n    Proses yang terstruktur dan dapat diulang akan mudah untuk diotomatisasi.\n    Tapi bukan berarti tidak bisa flexibel ya, bisa tapi akan ada effort lebih untuk membangunnya.\n    \n3. Compliance conformance\n\n    Maksudnya, untuk beberapa industri atau proses biasanya ada aturan yang ketat tenyang kemampuan audit\n    atau aturan yang wajib mengikuti prosedur yang sudah ada. \n    Automation bisa mendeliver ini dan menyediakan high-quality dan data yang relevan.\n\n4. Kebutuhan akan kualitas\n\n    Beberapa proses perlu untuk menghasilkan kualitas yang konsisten\n\n5. Kaya akan informasi\n\n    Proses yang berisi informasi digital sangat cocok untuk di automasi.\n\n\n","n":0.08}}},{"i":30,"$":{"0":{"v":"Templates","n":1}}},{"i":31,"$":{"0":{"v":"Daily Journal Template","n":0.577},"1":{"v":"This template was applied using the daily journal schema. Edit the [[templates.daily]] note to change this template.\nTo create your own schemas to auto-apply templates when they match a hierarchy, follow the [schema tutorial](https://blog.dendron.so/notes/P1DL2uXHpKUCa7hLiFbFA/) to get started.\n\n<!--\nBased on the journaling method created by Intelligent Change:\n- [Intelligent Change: Our Story](https://www.intelligentchange.com/pages/our-story)\n- [The Five Minute Journal](https://www.intelligentchange.com/products/the-five-minute-journal)\n-->\n\n## Morning\n\n<!-- Fill out this section after waking up -->\n\n### Gratitude\n\nI am grateful for:\n\n1.\n2.\n3.\n\n### What would make today great?\n\n1.\n2.\n3.\n\n### Daily affirmations\n\nI am...\n\n## Evening\n\n<!-- Fill out this section before going to sleep, reflecting on your day -->\n\n### Amazing things that happened today\n\n1.\n2.\n3.\n\n### How could I have made today even better?\n\nI could have made today better by\n","n":0.097}}},{"i":32,"$":{"0":{"v":"Tags","n":1}}},{"i":33,"$":{"0":{"v":"Zeno Rocha","n":0.707}}},{"i":34,"$":{"0":{"v":"Software Architechture","n":0.707}}},{"i":35,"$":{"0":{"v":"Self Improvement","n":0.707}}},{"i":36,"$":{"0":{"v":"Rhenald Kasali","n":0.707}}},{"i":37,"$":{"0":{"v":"Linter","n":1}}},{"i":38,"$":{"0":{"v":"Go","n":1}}},{"i":39,"$":{"0":{"v":"Docker","n":1}}},{"i":40,"$":{"0":{"v":"Diagram","n":1}}},{"i":41,"$":{"0":{"v":"Darren Hardy","n":0.707}}},{"i":42,"$":{"0":{"v":"Brené Brown","n":0.707}}},{"i":43,"$":{"0":{"v":"Handbook","n":1}}},{"i":44,"$":{"0":{"v":"Golang","n":1}}},{"i":45,"$":{"0":{"v":"5 Custom Metrics Dengan Promteheus","n":0.447},"1":{"v":"\n```go\npackage middleware\n\nimport (\n    \"strconv\"\n\n    \"github.com/gin-gonic/gin\"\n    \"github.com/prometheus/client_golang/prometheus\"\n    \"github.com/prometheus/client_golang/prometheus/promauto\"\n)\n\nvar (\n    dflBuckets = []float64{300, 1200, 5000}\n)\n\nconst (\n    reqsName           = \"requests_total\"\n    latencyName        = \"request_duration_milliseconds\"\n    patternReqsName    = \"pattern_requests_total\"\n    patternLatencyName = \"pattern_request_duration_milliseconds\"\n)\n\nvar (\n    requestTotal = promauto.NewCounterVec(\n        prometheus.CounterOpts{\n            Namespace: \"core\",\n            Name:      reqsName,\n            Help:      \"How many HTTP requests processed, partitioned by status code, method and HTTP path.\",\n        },\n        []string{\"code\", \"method\", \"path\"},\n    )\n)\n\nfunc APMPrometheus() gin.HandlerFunc {\n    return func(c *gin.Context) {\n\n        c.Next()\n\n        status := strconv.Itoa(c.Writer.Status())\n        requestTotal.With(prometheus.Labels{\"code\": status, \"method\": c.Request.Method, \"path\": c.FullPath()}).Inc()\n    }\n}\n\n```\n\n","n":0.118}}},{"i":46,"$":{"0":{"v":"4 Setup Golang CI","n":0.5},"1":{"v":"\n#go #linter\n\nLinter sangat membantu untuk melakukan standarisasi code.\nMereka juga bisa mengecek jika ada kode yang tidak efektif atau bugs kecil.\n\nCara setupnya cukup mudah\n\n- Windows & Linux\n\n\tuntuk windows bisa gunakan git bash agar bisa menggunakan `curl`.\n\n\t```bash\n\t\t# binary will be $(go env GOPATH)/bin/golangci-lint\n\t\tcurl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.43.0\n\n\t\tgolangci-lint --version\n\t```\n\n- Mac\n\n\t```bash\n\t\tbrew install golangci-lint\n\t\tbrew upgrade golangci-lint\n\t```\n\nInformasi lebih lanjut bisa cek di [https://golangci-lint.run/usage/install/](https://golangci-lint.run/usage/install/).\n","n":0.125}}},{"i":47,"$":{"0":{"v":"3 Build Image Dengan Docker","n":0.447},"1":{"v":"\n#go #docker\n\n```Dockerfile\nFROM golang:1.17 as build\nWORKDIR /app\nADD . .\nRUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags '-extldflags \"-static\"' -o main .\nCMD [\"go\", \"run\", \"main.go\"]\n\nFROM gcr.io/distroless/base-debian10 as production\nCOPY --from=build /app/main /\nEXPOSE 8080\n\nCMD [\"/main\"]\n```\n\n- `FROM golang:1.17 as build`\n\t\n\tbuild akan dialankan pada golang versi1.17, versi bisa disesuaikan dengan versi golang saat ini.\n\n- `WORKDIR /app`\n\n\tBuat folder /app sebagai working directory \n\n- `ADD . .`\n\n\tcopy source code kita dengan `ADD . .`\n\n- `RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -ldflags '-extldflags \"-static\"' -o main .`\n\n\tbuild source code hingga menjadi binary dan filenya nanti akan bernama main\n\n- `FROM gcr.io/distroless/base-debian10 as production`\n\n\tselanjutnya ambil image minimal menggunakan distroless base image.\n\tinfo selanjutnya bisa dibaca disini [https://github.com/GoogleContainerTools/distroless](https://github.com/GoogleContainerTools/distroless).\n\n- `COPY --from=build /app/main /`\n\n\tlalu copy binary apliasi yang sudah dibuat sebelumnya.\n\n- `COPY --from=build /app/main /`\n\n\tcopy binary dari build stage ke root\n  \n- `EXPOSE 8080`\n\n\texpose 8080\n\n- `CMD [\"/main\"]`\n\n\truning command `/main`\n","n":0.085}}},{"i":48,"$":{"0":{"v":"2 Membuat HTTP Server","n":0.5},"1":{"v":"\n#go\n\nAda banyak cara dalam membuat HTTP Server pada golang.\nKita bisa menggunakan standard libary golang `net/http` atau selain itu. seperti:\n\n- chi\n- mux\n- gin\n- dll\n\n### Standard Library\n\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\t\"io/ioutil\"\n\t\"log\"\n\t\"net/http\"\n\t\"time\"\n)\n\nvar (\n\tport            = flag.Int(\"port\", 8080, \"http port to listen on\")\n\tshutdownTimeout = flag.Duration(\"shutdown-timeout\", 30*time.Second,\n\t\t\"shutdown timeout (5s,5m,5h) before connections are cancelled\")\n)\n\nfunc main() {\n\tflag.Parse()\n\n\thttp.HandleFunc(\"/info\", func(w http.ResponseWriter, r *http.Request) {\n\t\tlog.Printf(\"===================================================\")\n\t\tlog.Printf(\"Query-string: %s\", r.URL.RawQuery)\n\t\tlog.Printf(\"Path: %s\", r.URL.Path)\n\t\tlog.Printf(\"Method: %s\", r.Method) // type method yang diterima \n\t\tlog.Printf(\"Host: %s\", r.Host)\n\n\t\tfor k, v := range r.Header { // baca header\n\t\t\tlog.Printf(\"Header %s=%s\", k, v)\n\t\t}\n\n\t\tif r.Body != nil { // baca body / payload data\n\t\t\tbody, _ := ioutil.ReadAll(r.Body)\n\t\t\tlog.Printf(\"Body: %s\", string(body))\n\t\t}\n\t\tlog.Printf(\"===================================================\")\n\n\t\tw.WriteHeader(http.StatusAccepted)\n\t})\n\n\tport := 8080\n\ts := &http.Server{\n\t\tAddr:           fmt.Sprintf(\":%d\", port),\n\t\tReadTimeout:    10 * time.Second,\n\t\tWriteTimeout:   10 * time.Second,\n\t\tMaxHeaderBytes: 1 << 20,\n\t}\n\t\n\tc := make(chan os.Signal, 1)\n\tsignal.Notify(c, syscall.SIGINT, syscall.SIGTERM)\n\n\tgo func() {\n\t\tlog.Printf(\"Listening on port :%d\\n\", port)\n\t\tif err := s.ListenAndServe(); err != nil {\n\t\t\tif err != http.ErrServerClosed {\n\t\t\t\tlog.Fatal(err)\n\t\t\t}\n\t\t}\n\t}()\n\n\tsig := <-c\n\tlog.Printf(\"shutting down: %+v\", sig)\n\n\tctx, cancel := context.WithTimeout(context.Background(), *shutdownTimeout)\n\tdefer cancel()\n\n\tif err := s.Shutdown(ctx); err != nil {\n\t\tlog.Fatal(err)\n\t}\n}\n```\n","n":0.082}}},{"i":49,"$":{"0":{"v":"1 Idiomatic","n":0.707},"1":{"v":"\n#go\n\n### Gunakan gofmt\n\n[gofmt](https://pkg.go.dev/cmd/gofmt) adalah program untuk formating digolang.\nPastikan selalu ada disetiap code editor yang digunakan.\n\n#### VSCode\n\nLink: \n- [https://code.visualstudio.com/docs/languages/go](https://code.visualstudio.com/docs/languages/go)\n\n#### Vim\n\nLink:\n- [https://github.com/fatih/vim-go/](https://github.com/fatih/vim-go/)\n\n### Buat nama receiver tetap pendek\n\n```go\ntype User struct {\n\tName string\n\tIsActive bool\n}\n\n// gunakan\nfunc (u User) Activated() {}\n\n// jangan gunakan\nfunc (user User) Activated() {}\nfunc (self User) Activated() {}\nfunc (this User) Activated() {}\n```\n\nAktifkan [golangci-lint](https://github.com/golangci/golangci-lint) dengan [revive](https://revive.run/docs) untuk dapat pengecekan [receiver-naming](https://revive.run/r#receiver-naming).\n\n### Memberikan nama package yang sesuai\n\nPenamaan package sebaiknya sesuai dengan nama directory atau fungsi dari package tersebut.\n\n- Fungsi: Implementasi elasticsearch ,Dir: /elasticsearch\n\n```go\npackage elasticsearch\n```\n\n- Fungsi: Membuat order pesanan, Dir; /order\n\n```go\npackage order\n```\n\n### Kelompokan import sesuai asalnya\n\nAda tiga bagian pada setiap import dan urutkan sesuai dengan asalnya, jangan urutkan sesuai abjad. Contoh\n\n```go\nimport (\n\t// 1. Untuk standard library\n\t\"context\"\n\n\t// 2. Untuk external dependency yang digunakan\n\t\"go.opentelemetry.io/otel\"\n\n\t// 3. Untuk internal code yang kita atau tim kita tulis sendiri\n\t\"github.com/zeihanaulia/my-project/internal\"\n)\n```\n\n### Gunakan nama pendek untuk scope yang terbatas\n\nNama pendek seperti 1 karakter huruf hanya boleh digunakan pada scope terbatas.\nMisalnya seperti pada function for.\n\n```go\nfor i:=0; i<5; i++ {}\n```\n\nsisanya berikan nama yang jelas sesuai maknanya.\n\n### Context harus menjadi parameter pertama\n\nAda aturan pada penggunaan context:\n\n1. Gunakan context sebagai parameter pertama pada function\n\n\t```go\n\t// Boleh\n\tfunc Create(ctx context.Context, args entity.Order) {}\n\n\t// Tidak boleh\n\tfunc Create(args entity.Order, ctx context.Context) {}\n\t```\n\n2. Jangan simpan context sebagai field dalam struct \n   \n\t```go\n\t// Tidak boleh\n\ttype User struct {\n\t\tctx context.Context\n\t\tName string\n\t}\n\t```\n\n### Return diawal\n\nDalam setiap function yang mengembalikan nilai seharusnya return diawal.\n\n```go\n// Tidak boleh dilakukan\nfunc ParseValue(value Value) (string, error) {\n\tif !value.MustBeTrue {\n\t\treturn \"\", fmt.Errorf(\"must be true\")\n\t} else {\n\t\tif value.Message == \"\" {\n\t\t\treturn \"\", fmt.Errorf(\"value must be set\")\n\t\t} else {\n\t\t\tif value.Priority == 0 {\n\t\t\t\treturn \"\", fmt.Errorf(\"priority must be set\")\n\t\t\t}\n\n\t\t\treturn fmt.Sprintf(\"%d %s\", value.Priority, value.Message), nil\n\t\t}\n\t}\n}\n```\n\nMeskipun code diatas berjalan dengan benar, tapi secara bentuk tidak boleh dilakukan. \nSebaiknya seperti ini.\n\n```go\n// Tidak boleh dilakukan\nfunc ParseValue(value Value) (string, error) {\n\tif !value.MustBeTrue {\n\t\treturn \"\", fmt.Errorf(\"must be true\")\n\t} \n\n\tif value.Message == \"\" {\n\t\treturn \"\", fmt.Errorf(\"value must be set\")\n\t} \n\n\tif value.Priority == 0 {\n\t\treturn \"\", fmt.Errorf(\"priority must be set\")\n\t}\n\n\treturn fmt.Sprintf(\"%d %s\", value.Priority, value.Message), nil\n}\n```\n","n":0.057}}},{"i":50,"$":{"0":{"v":"Book Summaries","n":0.707}}},{"i":51,"$":{"0":{"v":"The Compound Effect","n":0.577},"1":{"v":"\n#self-improvement\n#darren-hardy\n\nHal besar tidak terjadi dalam semalam, melainkan hal kecil yang dikumpulkan dan menjadi kebiasaan.\n\nhttps://go.darrenhardy.com/the-compound-effect-resources/\n\n## The Compound Effect in Action\n\nChapter pertama judulnya The Compound Effect in Action.\n\nCompound efek itu adalah pilihan-pilihan yang kecil yang baik, efektif dan dilakukan secara konsisten.\nDan dipilih secara sadar bukan autopilot.\n\n```\nSMALL, SMART CHOICES + CONSISTENCY + TIME = RADICAL DIFFERENCE\n```\n\n> Kalian pilih yang mana? dapet uang 3 juta dolar didepan atau 1 sen yang berlipat ganda selama 30 hari.\n\nJika kita pilih 3 juta didepan, ya sudah tidak akan ada penambahan lagi dihari hari berikutnya.\nTapi jika kita pilih 1 sen yang berlipat ganda kita akan mendapat total lebih dari 10juta di hari ke 30.\n\nJika pilihan yang kecil dibuat secara konsisten maka akan menghasilkan sesuatu yang besar.\n\nMisalnya seperti pada cerita kura-kura dan kelinci.\n\nTaukan yang akhirnya siapa? ya, yang menang adalah si kura kura yang lambat.\n\nKura-kura memang pelan, tapi dia konsisten selangkah demi selangkah berjalan hingga sampai tujuan.\nSedangkan kelinci yang cepat tapi tidak fokus sehingga tidak pernah sampai ke tujuan.\n\n### Action Step\n\n- Kita harus bertanggung jawab dengan diri kita sendiri.\n- Tuliskan 6 langkah positif yang bisa dilakukan secara konsisten setiap hari.\n- Tuliskan 6 langkah negatif yang ingin kita hentikan.\n- Identifikasikan area dimana dulu kita pernah sukses, tapi tidak melakukannya lagi karena sudah berpuas diri.\n\n## Choices\n\nChapter kedua judulnya Choices atau pilihan-pilihan.\n\nSemua dimulai dari sebuah pilihan.\n\nTidak mungkinkan, dalam semalam berat badan kita naik hingga 100kg.\nItu adalah hasil dari pilihan-pilihan buruk kita dimasa lalu.\n\nLalu bagaimana kita menjadi lebih baik dengan memilih pilihan yang tepat?\n\nJawabannya adalah berhenti hidup dengan autopilot dan mulai keputusan dengan sadar dan bertanggung jawab atas pilihan yang kita pilih.\n\nIngat keberuntungan adalah Preparation + Attitude + Opportunity + Action.\n\n> How? “You can’t manage what you can’t measure,” so choose to start tracking every action in the part of life that you’re focussing on.\n\nLalu, bagaimana kita bisa mengatur sesuatu yang kita gak bisa ukur?\nYa pilihannya kita bisa mulai melakukan \"tracing\" dari setiap aksi yang paling kita fokusin.\n\nContoh,\n\nMisalnya kita ingin menurunkan berat badan, caranya:\n\n- Track berat badan\n- Track ukuran badan\n- Track kalori\n- Track steps\n- Track waktu latihan setiap hari\n\n<!-- TODO: Bikin contoh cerita -->\n\n### Action Step\n\n- Identifikasi satu hal yang paling kalian perjuangkan lalu mulai buat journal yang kita syukuri.\n- Identifikasi satu hal kehidupan yang ingin kalian ubah dan kalian tidak bertanggung jawab 100%.\n- Start tracking setidaknya satu hal yang ingin diubah dan ditingkatkan.\n\n## Habits\n\nChapter ketiga judulnya habits atau kebiasaan.\n\nMembuat habit baru memang membutuhkan waktu, sabar dengan diri sendiri.  Jika kita gagal jangan menyalahkan diri sendiri atau siapapun. Mulai coba kembali.\n\nBagaimana kita mengambil tanggung jawab akan habit kita?\n\n- Kita harus mengetahui impact dari habit yang kita lakukan terhadap hidup kita.\n- Tetukan \"Why?\" yang memotivasi untuk mengubah perilaku.\n- Hilangkan kebiasaan buruk.\n- Buat kebiasaan baik yang akan mencapai tujuan kita.\n\n<!-- TODO: Bikin contoh cerita -->\n\n## Momentum\n\nChapter keempat judulnya momentum.\n\nDibuku ini ada yang namanya the big mo.\nKalau kita bisa menjaga perilaku baik dalam jangka waktu yang cukup lama, kemungkinan besar kita akan masuk kedalam ritme yang alami secara konsisten.\nSaat kita sudah mengikuti ritme ini, kita akan terus membuat keputusan yang lebih baik.\n\nKalau sudah mulai, jangan berhenti. Jika berhenti kita bukan saja kehilangan semua kerja keras sebelumnya, tapi kita juga kehilangan momentum.\n\nKonsistensi dan ketekunan adalah penghasil efek compound.\n\nDibuku ini daren mencontohkan,\n\nDipagi hari dia merefleksi diri dengan 3 hal yang disyukuri. lalu memvisualisasikan apa yang mau dicapai dihari itu.\nLalu buat 3 aksi nyata untuk mewujudkannya.\n\nLalu retrospeksi dimalam hari tentang apa yang dilakukannya hari ini. Refleksikan apa yang dipelajari dihari ini.\nApa yang bisa membuat hari esok jadi lebih baik.\n\n<!-- TODO: Bikin contoh cerita -->\n\n### Action Step\n\n- Bikin list dimalam hari dan morning routines.\n- List 3 hal dimana lo gak cukup konsisten.\n\n## Influences\n\nChapter kelima judulnya influences atau pengaruh\n\nSalah satu langkah penting dalam memperbaiki kebiasaan adalah pengaruh.\nKita harus pintar-pintar memilah informasi. Otak kita adalah mesin pemroses informasi. garbage in, garbage out.\n\nBagaimana caranya menjaga informasi yang masuk?\n\n1. Pilih media yang memberikan informasi mendekati tujuan kita dan hindari informasi berita berita tidak penting.\n2. Pilih asosiasi atau inner circle yang tepat, yang suportif dan menginpirasi.\n    - Evaluasi asosiasi saat ini. Apakah kita dikelilingi orang-orang yang cinta, mendukung dan menginspirasi?\n    - Visualisasi ideal asosiasi. Kalau boleh berangan angan kira kira teman seperti apa yang kita mau?\n    - Singkirkan yang terburuk sepenuhnya. Temukan cara untuk menjadu dari bad actor.\n    - Batasi pertemanan, kualitas lebih penting dari kuantitas.\n    - Perluas dan tiru yang baik.\n3. Pilih lingkungan yang tepat.\n\n### Action Step\n\n- Identifikasi pengaruh media dan informasi didalam hidup kita. Identifikasi cara untuk memproteksi dari informasi negatif.\n- evaluasi asosiasi saat ini. Mana yang harus dihentidan atau dibatasi? lalu bagai mana kita memperluas pertemanan yang baik.\n- identifikasi 3 hal yang paling kita fokusin untuk diimprove. cari mentor disetiap area tersebut. \n\n## Acceleration\n\nChapter keenam judulnya acceleration atau mempercepat.\n\nHadapilah rintangan bukan sebagai masalah, tetapi sebagai kesempatan.\nPerlu diingat pertumbuhan akan terlihat jika kita berhasil melewati rintangan-rintangan.\nDengan adanya rintangan kita dikasi kesempatan untuk belajar.\n\nSemua orang mungkin menghadapi masalah yang sama, tapi kebanyakan dari mereka menyerah begitu saja.\n\nBerdiri dan keluarlah, lakukan hal hal yang tidak terduga. carilah sebanyak mungkin peluang yang mengejutkan.\nAmbil aksi yang luar biasa. Manfaatkan compound efek dan kita akan menemukan cara untuk memulai pendapatan, kehidupan dan kesuksesan.\n\nMisalnya, Kalau kita sudah rutin berolah raga dipagi hari dan kita pikir kita hanya kuat push up sebanyak 50 kali.\nCoba paksakan diri kamu untuk menambahkan 20 kali lagi. Dengan cara seperti ini kita bisa menembuat ambang batas yang baru.\n\n\n### Action Step\n\n- Identifikasi waktu ketika kita mencapai moment of truth dan berkomitmen untuk sampai disana.\n- Temukan 3 hal didalam hidup kita dimana kita bisa melakukan \"extra\" dan membuat rencana untuk melakukan lebih.\n- Identifikasi 3 hal didalam hidup kita yang melewati ekspektasi lalu rencankan dan bahanya mana cara membuat \"wow\" moment.\n- Identifikasi 3 cara dimana kita bisa melakukan hal-hal yang tak terduga. Temukan perbedaan antara umum, normal dan expected.\n\n## Lesson Learn\n\nKita tidak bisa mengubah hidup kita hingga rutinitas kita berubah.\n\n1. Terima kekuatan compounding\n2. Buat dan track pilihan pilihan secara sadar\n3. Tumbuhkan kebiasaan positof dan membuang kebiasaan buruk.\n4. Set up rutin harian dan mingguan.\n5. Optimasi lingkungan\n6. Ambil aksi yang luar biasa.\n\nTerdengan sederhana tapi susah buat dikerjakan.\n\n","n":0.032}}},{"i":52,"$":{"0":{"v":"Staffeng","n":1}}},{"i":53,"$":{"0":{"v":"Self Driving","n":0.707},"1":{"v":"\n#self-improvement\n#rhenald-kasali\n\nBuku ini ditulis oleh Bapak Rhenald Kasali, Ph,D., Beliau adalah seorang guru besar FEUI, Praktisi Management dan Penulis Buku.\nDitulis pada \n\n## Kata Pengantar\n\nDunia usaha menghendaki manusia-manusia berkarakter driver yang berkompetensi, namun juga cekatan, gesit, berinisiatif dan kreatif.\nMasalahnya tanpa disadari kampus-kampus saat ini malah membentuk manusia-manusia menjadi passenger. \nKaum mudanya cenderung pandai namun outputnya adalah manusia-manusia penumpang. \nYang dimana fokus mereka hanyalah text book atau memindahkan pengetahuan dari buku ke kertas ujian. \nJadi pintar itu adalah pintar kertas dan sarjananya sangat mungkin menjadi sarjana kertas.\n\nBerbeda dengan para TKI diluar negri (Hongkong, Jepang, Taiwan), mereke mungkin tidak bersekolah tinggi, \ntapi mereka dipaksa lingkungan untuk berpikir kritis menghadapi dunia baru yang sangat menuntut. \nMereka melatih kegesitan, belajar dari kehidupan.\n\nDengan tuntuntan dan tantangan seperti itu akan mengasilkan manusia-manusia driver,tak ada waktu bagi mereka untuk diam.\nSeperti ucapan Syekh Mohammand Al-Mahtum yang membuat dasar-dasar perubahan di Dubai, dia berkata.\n\n> Kita ini seperti rusa di padang sabana yang dikelilingi harimau yang siap memangsa. \n> Kalau tidak bisa lari lebih kencang, maka kita akan menjadi mangsa mereka.\n\nIntinya adalah tentang mengubah mentalitas dan ini bukan lah perubahan yang mudah.\n\nPertanyaannya,\n\n- Bagaimana cara melatihnya?\n- Sudah tepatkan cara-cara yang dilakukan oleh pusat pelatihan? (sekolah, universitas)\n- Apakah dengan memberikan ilmu berupa pengatahuan manajerial mereka otomatis akan mendapatkan kompetensi?\n\n> Orang jujur itu mujur. Tetapi jujur dan disiplin seperti sekeping koin dengan dua sisi, saling melengkapi.\n> Karena kejujuran harus menjadi komitmen dan komitment dibentuk oleh Self Discipline.\n> Inilah modeal dasar Self Driver\n> - Iwan Setiawan, CEO PT Rintis Sejahtera\n\n## 01: Ini Soal Mandataris Kehidupan\n\nKita semua adalah pemeang mandat kehidupan. Sewaktu dilahirkan, Tuhan hanya bersabda, \"Inilah hidupmu\" setelah itu jelajahi sendiri.\nKarena suratnya dipegang orangtua lebih dulu, mereka ditugasi untuk memelihara dengan penuh kesungguhan.\nSetelah itu, suratnya pun dikembalikan dan pemegangnya bisa memilih untuk menjelajahi kehidupan itu engan penuh tantangan atau diam saja sebagai penumpang.\n\nMenjelajahi kehidupan berarti bertarung menghadapi tantangan dan perubahan, seperti seorang pengendara yang tak bebas dari resiko.\nKadang ia tergores, berbenturan dengan kendaraan lain. Dan kalau kecelakaan dialah yang diadili, bukan penumpangnya.\nSebaliknya, untuk menjadi penumpang, Lo boleh mengantuk, tertidur, terdiam, tak perlu tahu arah jalan, bahkan tak perlu merawat kendaan sama sekali.\n\nAda yang menggunakan surat mandat itu untuk tumbuh dan berkarya ada juga yang cuma menyimpan surat itu didalam sakunya sebagai dokumen pribadi.\nKedua duanya sama-sama mempunyai mandat, tapi keberadaannya berbeda. Dan tentu saja hidupnya berbeda.\nSebagian orang bilang nasib dan yang lain bilang ini adalah pergulatan hidup yang diawali dengan ada atau tidaknya kesadaran mandataris itu sendiri.\n\nSesuatu yang ada pada diri lo, ya itulah kendaraan lo. Ia menjelma menjadi kekuatan mencipta, berkarya, berprestasi dan berkreasi.\nKita menyebutnya sebagai gabungan antara kompetensi (apa yang lo bisa), kecekatan dan perilaku.\n\nKalo lo kuliah atau sertifikasi dan merasa dengan label-label itu akan membuat lo sukses, lo salah.\nJangan jual label-label itu, tapi jualah apa yang lo bisa lakuin. Tahu bukan berarti bisa.\n\nJadilah driver, Driver adalah sebuah sikap hidup yang membedakan dirinya dari passenger.\nLo tinggal memilih, ingin duduk manis, menjadi penumpang dibelakang atau mengambl resiko sebagai driver di depan?\n\nAda tiga hal yang harus dilakukan yaitu,\n\n- Men-drive diri sendiri\n- Men-drive orang lain\n- Men-drive bangsa\n\nKalau lo tidak bisa men-drive diri lo sendiri, bagaimana lo bisa men-drive orang lain? dan berarti gak ada kepemimpinan dari diri lo.\n\nSeorang driver bisa hidup dimana pun mereka berada dan selalu menumbuhkan harapan.\nMereka selalu mengajak orang untuk terus berkembang selalu melakukan pembaharuan.\nMereka berinisiatif memulai perubahan tanpa ada yang memerintahkan, namun tetap rendah hati dan kaya empati.\nSeorang driver harus seimbang antara logic (rasionalitas, hitung-hitungan, analisis dan targetnya) dengan hatinya (empati).\nMereka adalah orang tau arah dan resiko yang akan dihadapi.\nSedangkan passanger adalah orang orang yang terbelenggu dengan fix mindset.\n\nKesadaran yang dibentuk oleh pengalaman dan pendidikan itulah maksud dari driver mentality.\nPendidikan diperlukan untuk memperbaiki cara berpikir dan cara menjalani hidup yang menantang.\nBelajar artinya berpikir. Kalo lo ambil pendidikan cuma buat menghapal, ya lo rugi sih. \nIPK lo gak akan ada artinya kalo lo gak bisa berpikir dan cuma manfaatin hapalan aja.\n\nBerpikir juga gak ada batas waktunya, gak pernah berhenti cuma karena lo udah dapet ijasah.\nBagaimana lo bisa berpikir kalo lo gak berani ambil resiko? \nMenjadi driver sama dengan mengekspos diri lo terhadap resiko. \nTapi resiko itu hanya akan jadi masalah kalo lo ugal-ugalan.\n\nKetika lo udah takut buat melakukan \"kesalahan\" kecil, lo akan masuk kedalam mentalitas penumpang.\nOrang-orang yang gak pernah melakukan kesalahan sesungguhnya adalah orang yang gak berbuat apa-apa.\n\nTapi bisa gak sih, orang yang gak berpendidikan tinggi, punya mental driver?\nTentu bisa, tapi seorang driver tidak cukup hanya bermodalkan tekad dan semangat, lo butuh referensi dari pengetahuan akademis dan belajar dari orang lain.\nIntinya cara berpikir yang tepat adalah modal penting.\n\nPersoalan perubahan yang dihadapi manusia bukanlah mengadopsi hal-hal baru, melainkan sulitnya membuang kebiasaan lama. - Albert Einstein.\n\n## 02: Manusia Berpikir\n\nMengambil kutipan dari George Bernarr Shaw,\n\n> Hanya 2 persen dari orang orang berpikir, 2 persen berpikir kalo dia berpikir dan 95 persen memilih mati dari pada berpikir.\n\nApa yang terjadi dengan 95 persen itu? \nMereka terperangkapdalam mentalitas penumpang yang memilih menunggu ketimbang berinisiatif, \ngak merasa perlu mengeksplorasi jalan-jalan baru sehingga hanya tau jalan yang itu-itu saja,\ngak merasa perlu merawat kendaraan hidupnya, sehinga boleh mengantuk bahkan tertidur selama perjalanan karirnya yang mudah itu. \nMaksudnya autopilot.\n\nDari sejumlah orang yang menekuni profesi tertentu. Hanya kurang dari 2% yang benar-benar serius dan mengembangkan dirinya.\nYang lain terperangkap dalam mentalitas penumpang yang memilih untuk menunggu.\n\nSetiap manusia memiliki kendaraannya sediri. Pandangilah diri lo di cermin. \nJangan lihat sepotong-sepotong namun lihatlah seluruh tubuh lo dari ujung rambut hingga ujung jari.\nYa, itulah kendaraan lo. Dialah teman setia yang menemani diri lo kemanapun lo pergi. Dialah yang mengantarkan mimpi-mimpi lo sampai ketujuan.\n\nSetiap orang memiliki kendaraan yang kita sebut dengan diri. Dan dalam diri itu terdapat mentalitas atau jowa pembawa diri itu. \nMaka itulah kita bisa membedaka kedalamdua kategori mental: mentalitas penumpang dan mentalitas pengemudi.\n\nMenjadi pengemudi bukanlah sekedar menyetir dan memiliki surat izin. \nBanyak manajer memegang legalitas untuk memimpin tetapi tak banyak berbuat dalam posisinya itu.\nJabatan tinggi tapi belum tentu bisa disebut sebagai driver.\n\nAkibat yang terjadi jika bermental penumpang.\n\n1. Kurang kemandirian, cepat menyerah\n2. Dikendalikan oleh kehidupan \"rutin\" menjadi autopilot\n3. Mudah mengeluh dan bersungut-sungut sepanjang hidup\n4. Tidak tahu alternatif jalan keluar\n5. Mudah frustasi ketika suatu keadaan berubah tiba-tiba\n6. Kurang berhasil dalam karir dan usaha\n7. Menjadi boros meski tujuannya berhemat.\n\nPrinsip seorang diver adalah inisiatif, melayani, navigasi dan tanggung jawab.\nIa harus tau arah jalan dan cara memperbaiki serta merawat kendaraan.\nSadar bahwa sesuatu hanya akan menjadi lebih baik bila lo sendiri yang mengubahnya.\nLo adalah penentu masa depan, baik masa depan diri sendiri, keluarga maupun perusahaan tempat lo berada.\nDan lo juga penentu nasib bangsa. \n\nKuncinya adalah berpikir, keluar dari sangkar emas.\n\nMentalitas penumpang ditandai dengan:\n\n- Sudah puas dengan keadaan sekarang\n- Tidak menyukai tantangan baru\n- Menyerahkan masalah kepada atasa atau orang lain\n- Takut menghadapi masalah\n- Menunggu perintah dan menjawab dengan kata \"siap\"\n- Sangat mencintai jawaban atau kekuasannya\n- Dikendalikan oleh autopilot\n- Terlalu membanggangkan apa yang telah dicapai\n- Menyandera organisasi sebagai alat untuk \"menumpang hidup\"\n\nMentalitas driver ditandai dengan:\n\n- Sangat tidak puas dengan keadaan sekarang\n- Menyukai tantangan-tantangan baru, mengeksplorasi peluang-peluang baru\n- Memecahkan masalah bersama, menginspirasi orang lain.\n- Berkerja dengan hati, mencintai semama, menjaga hubungan baik, memiliki kepedulian.\n- Memimpin dengan pertanyaan, memperbaiki cara berpikir penumpang-penumpangnya.\n- Memberikan arah jalan yang jelas, merangkul orang-orang yang berbeda paham dengannya\n- Berani melakukan kesalahan-kesalahan kecil dan mengambil resiko terukur.\n- Sangat mencintai perubahan, namun rendah hati dan penuh empati\n- Dikendalikan oleh creative thinking\n- Selalu belajar tentang hal-hal baru\n- Membebaskan para sandera dari penumpang yang membajak organisasi\n\nUntuk menjadi seorang driver, maka diri lo sendiri yang menentukannya.\nLo sendiri yang mentukan mau terperangkap sebagai penumpang atau keluar sebagai pemimpin\n\nSeorang driver melakukan investasi diri seperti layaknya seorang pengusaha.\n\n- Dispilin diri\n- Menghadapi resiko\n- Bermain untuk menang\n- Kekuatan berpikir simple\n- 2C critical & creative thinking\n- Mindset yang tumbuh\n\nSeorang driver tidak akan tumbuh hanya dengan kekuatan dari dirinya sendiri, tapi juga tumbuh dengan kekuatan orang lain.\nBantulah orang lain agar mereka juga berhasil.\n\nSeorang driver bertugas membawa penumpang ke tempat tujuannya agar mampu meneruskan perjalanan berikutnya.\nSedangkan seorang passanger tidak memperdulikan orang orang disekitarnya.\n\nSeorang driver mengambangkan orang lain dengan berbagai pendekatan:\n\n- Goal setting dan mengambil keputusan\n- Memimpin dengan hatinya\n- Kekuatan memberi\n- Leadership 360 ke atas keawah dan kesamping\n\nKalo lo udah berhasi drive diri lo, drive orang lain, maka yang ketiga adalah drive organisasi lo.\nSeorang driver tidak membarkan organisasinya tidak tumbuh. Lo perlu memperbarui organisasi atau perusahaan lo menjadi perushaan yang tumbuh.\n\nUntuk men-drive orgnisasi, seorang driver memerlukan.\n\n- Berpikir strategis\n- Berbagai teori klasik, konsep-konsep dasar dan pandangan baru.\n- Pemahaman tentang competitiveness dan klaster yang didukung oleh pentingnya complementarity.\n- Berpkir perubahan dan adaptif\n- Berkerja dengan tata nilai dan etika\n- Agility\n\n## 03: Mengapa Kaum Muda Memilih Universitas\n\nSebagian orang menganggap perkembangan data orang yang masuk universitas makin banyak adalah sesuatu yang mengembirakan.\nBenarkah ini kabar gembira? Belum tentu, kenapa? karena banyak sekali sarjana pengangguran yang tidak siap dengan dunia kerja.\nPara orang tua mengirim anaknya ke universitas agar menjadi sarjana dan mereka berpikir dengan menjadi sarjana anak-anak itu otomatis telah berpikir.\nPada kenyataannya mereka hanya mendapat selembar ijasah dan tetap sulit berkerja.\n\nMengapa para sarjana sulit memperoleh pekerjaan?\nKarena semasa menjalani pendidikan mereka tidak berpikir, hanya menghafal. \nPadahal yang dibutuhkan adalah keterampilan dalam memindahkan pikiran kedalam tindakan nyata.\nTindakan hanya bisa didapat melalui latihan yang nantinya tersimpan di mucle memory (myelin).\nSedangkan pengetahuan disimpan di brain memory, brain memory baru bisa berkembang jika manusia melatihnya.\nDan celakanya, mereka tidak mendapatkan ini dibangu kuliah.\n\nApakah ada perusahaan tanpa driver? Bisa saja ada, dan gejalanya seperti ini:\n\nPertama, Mereka tidak berani mengambil keputusan. \nSelalu ragu ragu dalam bertindak dan menunggu approval orang lain. \nPadalah orang itu sudah berada dipuncak jabatan.\n\nKedua, Mereka selalu membutuhkan data.\nData diambil berulang ulang, \ntapi tidak ada rasa percaya diri sehingga organisasi lo berkerja mengumpulkan data terus menerus.\n\nKetiga, Waktu berkerja dihabiskan oleh meeting. \nWaktunya gak jelas. \nDan ketika selesai rapat tidak ada keputusan atau masih bingung.\n\nKeempat, Keputusan justru diambil oleh bawahan menjelang akhir, \ndan bawahan menjadi kurang bersemangat \nbahkan ragu ragu karena atasannya tidak memberi gambaran strategis \ndan menyatukan tindakan para bawahan yang bergerak sendiri sendiri\n\nKelima, Perusahaan tidak mengalami kemajuan.\nTetapi atasan berada di dalam jabatannya dalam tempowaktu yang panjang.\nJabatan aman, tapi satu persatu lampu di tempat lo berkerja mulai redup dan tidak ada gantinya.\n\nKeenam, Banyak masalah tapi tidak ada terobosan.\nSemua mencara aman.\nProgam sudah dibuat, tapi kegiatannya hanya rutin.\nKarena semuanya bersifat formalitas sehingga tidak ada terobosan.\n\nKondisi seperti ini membutuhkan \"tentara pembebasan\". Siapa dia? dialah yang disebut driver.\nDia adalah seorang yang berpikir, membuat langkah kreatif juga kritis terhadap informasi dan fakta.\n\nBagaimana cara menjadi driver yang menyenangkan dan penumpangnya bisa enjoy.\nLengkapi dan latih mereka agar menjadi jadi driver selanjutnya.\n\n\n## 04: Dua Jenis Penumpang: Bad And Good Passangers\n\nAda dua jenis penumpang, penumpang yang baik dan penumpang yang buruk.\n\nPenulis melakukan action research bersama sejumlah psikolog yang biasa menangani karyawan bermasalah.\nOrang-orang bermasalah ini biasanya menyakitkan bagi orang-orang disekitarnya, termasuk bagi atasan-atasannya.\nKepimimpinannya buruk, prestasi rendah, kurang disukai rekan-rekan kerja, tetapi gak mau mengundurkan diri.\nDitambah lagi, perusahaa tempat mereka berkerja enggan mengambil tindakan apa-apa.\n\nIni adalah gejala-gejala dari penumpang yang buruk.\n\n- gemar menyalahkan orang lain\n- menjadi sangat agresif\n- mudah jengkel\n- cepat dan sering mengeluh\n- hidup tak terarah\n- terlalu cepat menyerah\n- pesimistis\n- mudah menghasut orang lain untuk menjegal orang-orang baik\n- punya kecenderungan membalas dendam\n- menarik diri\n- hidup penuh kebencian\n- tak ada passion\n\nPerusahaan atau organisasi yang sehat perlu dukungan dari pegawai-pegawainya. \nNamum, kalau pasukan yang dipimpinnya sudah berubah menjadi kumpulan orang-orang yang \"sakit hati\" dan punya banyak kepentingan dan luka batin \nmaka bisa jadi bukan perubahan positif yang didapat, melainkan bumerang.\n\nBagaimana mengubah dari penumpang yang buruk menjadi penumpang baik? Ya, segera berubah.\n\nBerubah artinya selalu dimulai dengan menerima realitas, berdamai dengan diri sendiri, menerima suma dengan lapang dada, introspeksi diri.\nMasalahnya hanya satu, Lo mau apa engga untuk berubah? Mustahil kita mendapatkan hasil yang berbeda dari tindakan yang sama berulang-ulang.\n\n## 05: Dua Jenis Pengemudi: Bad And Good Drivers\n\nDua jenis pengemudi: yang baik dan yang buruk.\n\nJika mengambil perumpanaan sopir, Bad driver sama seperti sopir ugal-ugalan. \nIngatlah, the first class car membutuhkan the first class driver. \nPada setiap diri yang memiliki inteligensi yang tinggi, dibutuhkan pengemudi berkualitas tinggi pula.\nOrang-orang yang terlatih akan tahu menempatkan diri, kapan harus berbicara dan kapan harus mendengarkan.\nIa harus tahu pakan harus bergera maju dan kapan harus mundur.\n\nMungkin lo banyak menemukan orang-orang hebat yang tidak berada ditempat yang tepat. \nIa adalah good driver, tetapi ia dikelilingi oleh teman-teman yang buruk, yang asal bicara, asal bertindak.\nMereka bergerak cepat, berinisiatif tinggi, tetapi selalu menumbulkan masalah.\nKata-katanya tidak dipikirkan sebelum diucapkan, niatnya belum tentu tulus.\n\nOrang-orang yang kita sebut sebagai bad drivers akan lebih banyak mengambil energi kita,\nMengaak kita menngunakan tenaga untuk melakukan keributan-keributan ketimbang langkah langkah yang tepat.\nAkibatnya, reputasi kita perlahan0lahan tergerus, semakin terpuruk, semakin tidak dipercaya.\n\nBad drivers adalah kumpulan orang-orang yang sakit hati, agresif, mudah tersulut kebencian, \ntak menentukan arah tindakannya, lebih mencari pembenaran ketimbang kebenaran \ndan senang membuat alasan-alasan untuk menutupi kekalahan atau kesalah-kesalahannya.\n\nSopir ugal-ugalan ini akan membuat penumpang-penumpang baik belajar cara mengemudi kehidupan yang buruk.\nMereka akan menjadi orang yang mencari pembenaran dan senang memancing keributan.\nMereka hanya dapat dilibatkan kembali setelah lulus dari proses terapi diri,sebuah proses yang harus dimulai kembali.\nAtau melakukan self healing yang datang dari dalam diri sendiri.\n\nLalu siapakah yang bisa disebut dengan good drivers?\n\nGood diver adalah seorang inisiator, tokoh perubahan dan mampu menjadi role model bagi banyak orang. \n\nLalu bagaimana cara menjadi good driver?\nBisa dengan latihan assertiveness /seni bertutur kata, menampilkan gerak-isyarat yang menunjukan ketegasan namun tetap bersahabat.\nLo dilatih untuk berbicara secara terbuka, menyampaikan unek-unek dan hak lo.\nNamun dengan seni yang tinggi lo bisa sampaikan tanpa merendahkan diri lo atau orang lain.\nMalah mereka dapat menerima dengan hormat karena lo menegurnya dengan cara halus, santun dan tidak menyakiti perasaannya.\n\nIni bukan sekedar bahasa melaikan perasaan dan kedewasaan, kepercayaan diri, dan gesture. Melalui latihan itu lo dibangkitkan kesadaran diri (self awarenes).\nKemampuan bernegosiasi, mencaca isyarat, mengurangi agresivitas memperbaiki tone dan komunikasi.\n\nLatihan selanjutnya adalah berfikir dalam kotak baru. \n\nBefikir out of the box adalah latihan awal seorang passenger untuk menjadi seorang driver.\nIa harus memiliki kemampuan mencoba jalan jalan baru, keluar dari jalur-jalur utama, mengambil resiko tersesat tanpa harus melanggar hukum.\nMaka, ia pun mengenal peta besar, biasa melihat dari luar maupun dari dalam.\n\nLalu apa itu berfikir dalam kotak baru?\n\nKonsep ini diperkenalkan loleh Luc De Brabandere dan alan Iny pada tahun 2013.\nIni disebabkan oleh banyak hal yang telah ditemukan oleh manusia, sehingga ruang bagi lo untuk menemukan sesuatu yang bener-benar baru sangat terbatas.\nJadi yang dibutuhkan adalah cara baru dalam memandang segala hal yang sudah exist itu. \nMisalnya, Coba lo membayangkan seakan-akan perusahaan atau pemerintahan yang lo pimpim telah benar-benar lenyap. Mulailah dari awal.\n\nBerpikir dengan cara-cara baru itu akan memudahkan seseorang berubah dari passanger menjadi driver. \nPandanglah dengan segala potensinya dengan cara-carabaru.\n\n> Saya kasihan melihat anak-anak kita yang sesungguhnya bisa menjadi lebih hebat,\n> tetapi kirang dipercaya orangtua.\n> Berikan kepercayaan, tantangan dan dukungan, maka mereka dapat menjadi lebih hebat lagi.\n> Jangan kekang, hambat atau jadikan mereka passanger.\n> Trihatma Kusuma Haliman - Fouunder Podomoro University\n\n\n## 06: Self Dicipline\n## 07: Ambilah Resiko\n## 08: Play to Win\n## 09: The Power Of Simplicity\n## 10: Creative Thinking\n## 11: Critical Thinking\n## 12: Growth Mindset\n## 13: Epilog\n\nPembentukan mental dan karakter semasa muda itu sangat menentukan.\nPembentukan mental itu mencangkup ketrampilan-keterampilan hidup dasar yang membentuk fondasi kepemimpinan seseorang,\nsekaligus fondasi ekonomi satu bangsa.\nMentalitas passenger pada dasarnya terbentuk karena kurang terlatihnya lif skills seseorang sehingga individu itummenjadi tidak cekatan dan terbelenggy.\nExecutive function dan self regulationnya tidak jalan. \nTerdapat indikasi kuat anak-anak muda sangat tidakfokus dalam berkerja.\nPikirannya bercabang-cabang, lambat laun mereka akan sangat mengandalkan corporate branding sehingga inisiatif mereka untuk mendatangi dan melaynikurang kuat.\nUmumnya punya ilmu, tetapi maaf \"malas\" menggunakan ilmu-ilmu yang mereka miliki untuk berpikir, menalisis, mencari penyebab dan memecahkan masalah-masalah yang dihadapi.\n\nKalau tidak kita bentuk, maka mereka akan lebih banyak mengeluh karena semakin hari semakin terlihat tidak berkarya, lalu terancam berbagai sanksi.\nMulailah mereka merasa diperlakukan kurang adil karena gaji teman-temannya yang lebih muda naik lebih cepat, posisi para driver melonjak tinggi sementara mereka tetap dibawah.\nMenjadi compainer dan terlihat kumuh, kurang mampu membeli kesejahteraan dan kebahagiaan.\n\nSetiap passenger bisa memlih, menjadi bad atau good atau sekalian menjadi bad driver.\nDan perusahaan ayau institusi pun punya piliham\"\nmemasukan mereka ke dalam lemari es atau melakukan transformasi.\n\nKaum muda perlu dilatih tiga hal:\n\n- working memory (kemampuan menata informasi)\n- inhibitory control (tahu dan tidak melakukan apa yang tidak boleh diucapkan /dilakukan) /pengendalian diri\n- cognitive flexiibility (kemampuan beradaptasi)\n\nKetiga hal itulah yang akan membentuk generasi emas yang bertanggung jawab dan produktif.\nMereka sedari dini perlu dibentuk untuk berkerja secara efektif, fokus, tahu dan berkerja dengan aturan, sikap positif terhadap oranglain, mengatasi ketidaknyamanan dan permintaan yang beragam, serta cara mengelola infirmasi yang datang bertubi tubi.\n\nMemberikan tantangan pada kamumuda atau pegawai  itu penting. Bahkan, lebih pending dari sekadar pujian.\nTantangan yang dibasakan akan melatih working memory, fokus, dan cognitive flexibilitu seseorang. \nDan ini sangat menentukan kualias seseorang untuk menjadi driver atau passenger.\n\nHidup yang indah adalah hidup yang bermanfaat, bermatabat dan tumbuh.\n\n> Jika anda ingin menaklukan rasa takut, jangan berpangku tangan didalam rumah dan diam didepannya.\n> Pergilah keluar, temui banyak orang dan buatlah diri anda sibuk.\n> - Dale carnegie\n","n":0.019}}},{"i":54,"$":{"0":{"v":"Measure What Matters","n":0.577},"1":{"v":"\n## Kata pengantar\n\nPernah gak lo bekerja di perusahaan atau organisasi yang gak jelas, gak tau arahnya mau kemana tapi semuanya mau dicapai dan semuanya menjadi paling prioritas. \n\nMungkin beberapa dari kalian pernah mengalami.\n\nTenang, banyak kok yang kaya gini. Bingung mau ngapain karena semuanya mau dikerjain.\n\nPerusahaan atau organisasi yang memiliki terlalu banyak tujuan, bisa katakan gak memiliki tujuan sama sekali.\n\nKok Bisa?\n\nya, karena setiap perusahaan atau organisasi memiliki resource yang terbatas dan kemampuan orang orang yang didalamnya pun terbatas. Kalau terlalu banyak tujuan, apalagi dalam waktu yang sebentar ini membuat kekuatan dari perusahaan terbagi bagi, seperti gak memiliki arah. Apalagi kalau tujuan setiap tim saling bersinggungan, saling tunggu tungguan, membuat hal yang sama, tau tau, gak kerasa satu quarter lewat tapi ternyata jalan ditempat.\n\nLo udah berusaha mati matian, kerja dan meeting sampe malem, resource sudah banyak yang kepakai, tapi gak efektif sama sekali cuma gara gara tujuannya gak jelas. Sayang banget kan?\n\nJadi harus gimana? Ya tentukan ide yang briliant lalu eksekusi ide tersebut dengan sangat baik. Lalu review secara berkala. Dan karena itu OKRs adalah jawabannha.\n\nOKRs artinya Objective dan Key Result. Teknik ini membantu kita untuk mendefinisi tujuan dan memecah tujuan tersebut menjadi sesuatu yang bisa dilakukan dan penting. Lalu bagaimana caranya untuk bisa tetap stransparan untuk mencapai tujuan yang sudah di atur.\n\nJadi harapan dari penulis Bapak John Doer, setiap orang didalam perusahaan bisa bekerja secara tim untuk mencapai tujuan sehingga perusahaan memiliki arah yang lebih clear.\n\nMau penjelasan lebih detail? Stay tune terus, gw akan membahas 6 poin penting yang bisa kita jadikan inspirasi ketika lo mau menerapkam OKRs","n":0.062}}},{"i":55,"$":{"0":{"v":"Filosofi Teras","n":0.707},"1":{"v":"\n#self-improvement\n\n## Kata Pengantar\n\nDitulis oleh A. Setyo Wibowo.\n\n### Filsuf dimedan perang\n\nAda yang pernah menonton film gladiator?\n\nAda makna yang bisa diambil dalam film gladiator. Dimana sang kaisar menang dalam peperangan tapi alih alih ikut berpesta, dia malah merenung. \n\nDia merenung seperti ini,\n\nApakah tindakanku tepat, apakah perang dengan korban begitu banyak memang diperlukan?\n\nKaisar selalu mencatat perenungan-perenungan pribadinya. Karena tulisan tulisannya bagus, maka sempat dibukukan dengan judul meditations.\n\nLewat latihan dan menuliskan setiap hari refleksi atas pengalamannya, Marcus Aurelius sang kaisar membangun jiwanya seperti benteng yang kokoh. Dia selalu berlatih memilah \"Apa yang tergantung padaku dan apa yang tidak tergantung padaku\" supaya terhindar dari penyakit jiwa yaitu emosi negatif.\n\nSelain itu Marcus Aurelius mempraktekan kategori yang paling sulit dalam filsafat stoa, yaitu kathekonta, kewajiban yang tidak wajib tapi layak dilakukan.\n\n### Filsafat stoa masih relevan?\n\nMasih, filsafat stoa adalah jalan hidup. Loh, bukannya ada agama? Ya, apa salahnya sih beragama sambil belajar filsafat? Supaya cara beragama kita makin mantap.\n\nKisah james stockdale, seorang tawanan perang yang disiksa sangat parah sekali, tapi dia bisa bertahan hingga akhirnya bisa bebas. Stockdale mengamalkan / mengingat pemikiran epiktos yang isinya.\n\nA. Pembedaan apa yang tergantung pada kita dan apa yang tidak tergantung pada kita\nB. Soal baik atau buruk itu tergantung cara jiwa menyelesaikannya.\nC. Segala situasi buruk yang menimpa kita bersifat indifferent atau netral saja.\n\nPada tahun 1990an berkembang sebuah metode psikokogi poluler bernama \"terapi kognitif\" katanya ini terinspirasi dari buddha dan epiktos yang intinya:\n\nTerapi kognitif meyatakan bahwa segala emosi yang mengganggu kita sebenarnya berasal dari cara penilaian yang salah. \nCara berpikir yang salah menyebabkan munculnya simtom-simtom yang   menggangu. \nCara pandang kita yang keliru dalam hidup menyebabkan kita stress, gelisah, depresi atau marah marah dengan alasan yang tidak jelas.\n\n## Bab 1\n\n### Survey Khawatir Nasional\n\nDi bab ini penulis membuat survey kekhawatiran yang diisi oleh 3000an responden. Dan hasilnya semua merasa khawatir. Tidak ada yang tidak khawatir.\n\nMaka kalo gitu kenapa kita harus khawatir tentang khawatir sih?\n\nKhawatir itu ada biayanya loh\n\n1. Menghabiskan energi dan pikiran.\n2. Menghabiskan waktu dan juga uang\n3. Menggangu kesehatan tubuh\n\nMasih banyak orang yang memisahkan kesehatan pikiran dan tubuh, seolah olah yang ada dipikiran tidak mempengaruhi kesehatan tubuh kita.\n\nDi bab ini ada wawancara dengan dokter Andri SpKj FAPM seorang spesialis kesehatan jiwa, yang akan membahas topik ini.\n\n#### Jadi, bagaimana sih stres bisa merusak kesehatan tubuh kita?\n\nAda kutipan kalimat dari hans seyle\n\n\"Bukan stres yang membunuh kita, tapi reaksi kita terhadapnya\" - hans seyle.\n\nPersepsi kita lah yang membuatnya, misalnya stres karena macet atau karena hutang. Khawatir seperti ini dalam jangka panjang akan menyebabkan tubuh mengeluarkan zat kortisol. Zat ini bersifat oksidatif, merusak apapun didalam tubuh kita. Jika dia menempel di pankreas, dia akan meningkatkan insulin. Yang menyebabkan kita, bawaannya ingin makan terus. Badan memanggil manggil karena badan kita merasa kalau dia sedang membutuhkan banyak energi.\n\nDokter Andri selalu berpesan kepada pasiennya, jangan stres lama lama karena jika sudah akut lo gak akan bisa membedakan lagi kondisi stress dan tidak, karena sudah terbiasa hidup dalam stres.  Badan akan merespon hal yang lo tidak tau kalau lo sedang stres. Contohnya penyakit dispesia atau gangguan lambung. Dalam jangka panjang bisa kena penyakit jantung, diabetes dan hipertensi.\n\n#### Apa bedanya takut, khawatir/cemas dan stres?\n\nKalau takut, lo tau apa yang lo takuti. \nMisal, takut setan atau takut berkelahi.\n\nKalau cemas, gak jelas penyebabnya. Orang menjadi cemas karena tidak bisa mengendalikan hidup disituasi ketidak pastian.\n\nKalau stres, artinya tekanan atau sesuatu yabg menggangu keseimbangan hidup kita. Ada stres fisik dan psikis.\n\nKalau fisik itu contohnya habis olah raga, kecapean. Kalau mental, lo merasa kelelahan diperkerjaan atau lingkungan. Dan ini ada sumbernya.\n\nKalau stresnya terus meningkat dan sudah tidak tau stressnya dari mana. Itu artinya lo sudah masuk fase cemas. Kalau dibiarkan akan menjadi depresi.\n\nAda dua gejala penting depresi,\nPertama mood yang sedih dan yang kedua putus asa, tidak ada harapan, merasa hidupnya kok gini gini aja.\n\nMakannya, kalo ada temen lo yang suka merasa \"hidup gw kok gini gini aja ya\" bisa jadi dia udah mengalami gejala awal depresi. Karena apa yang terucap bisa jadi memang refleksi dari hidup dia.\n\n#### Apa pesan untuk pembaca?\n\nCoba kenali sumber stressnya. Kalau kita bisa mengenali sumbernya, maka kita bisa melawannya.\n\nCatat hal hal dalam hidup yang bisa atau membuat lo bahagia. Lalu lakukan aktivitas yang membahagiakan itu.\n\n## Bab 2\n\n### The problem with positive thinking\n\nPerkembangan terakhir ilmu psikologi justru menemukan adanya masalah dengan anjiran berfikir positif. Artikel \"The problem with positive thinkkng\" menyebutkan bahwa justru sering menghambat kita.\n\nPositive Thinking menipu pikiran kita, bahwa seolah olah kita sudah mencapai apa yabg kita inginkan, sehingga melemahkan keuletan kita untuk mencapainya. Tapi, nyuruh orang buat berpikir relaistis aja juga gak membantu sih.\n\nPenulis artikel tersebut mengusulkan istilah \"mental contasing\" yaitu menggabungkan positive thiking atau membayangkan hasil yang diharapkan telah dicapai dengan memikirkan hambatan apa saja yang akan mereka temui.\n\n### Filosofi Teras\n\nKenapa namanya filosofi teras, karena dijaman itu para filsuf mengajarkan filosofi di teras atau stoa bahasa yunaninya. Dijaman itu disebutnya stoisism tapi karena banyak orang indonesia sulit menyebutnya maka diterjmahkan menjadi filosofi teras.\n\nDi bab ini juga penulis sedikit bercerita dampak dari filosofi teras. Setelag dia pelajari dan amalkan, hidupnya mebjadi lebih tenang. Tidak lagi terganggu hal hal negatif, kesialan, tekanan pekerjaan sampai orang orang toxic disekitar kita. \n\nPenulis juga merasa filosofi teras bisa kompatible dan sebagai tambahan dengan berbagai kepercayaan atau agama.\n\n#### Apa tujuan utama dari filosofi teras\n\n1. Hidup bebas dari emosi negatif, mendapatkan hidup tentram. Ketentraman ini hanya bisa diperoleh dengan memfokuskan diri pada hal hal yang bisa kita kendalikan.\n2. Hidup mengasah kebajikan. Ada empat kebajikan:\n    a. Kebijaksanaan: kemampuan mengambil keputusan terbaik dalam situasi apapun.\n    b. Keadilan: memperlakukan orang lain dengan adil dan jujur\n    c. Keberanian: keneranian berbuat yang benar, berani berpegang prinsip kepada yang benar.\n    d. Menahan Diri: disiplin, kesederhanaan, kepantasan dan kontrol diri.\n\n#### Kenapa stoisisme bisa tetap relevan\n\nKare Andreson menyebutkan dalam bukunya \"Why stoicism matter today\"\n\n1. Ditulis untuk menghadapi masa sulit\n2. Dibuat untuk globalisasi\n3. Filsafat kepemimpinan\n\n## Bab 3\n### Hidup selaras dengan alam\n\nSalah satu prinsip utama stoisme adalah kita harus hidup berselaras dengan alam. Maksudnya alam atau nature disini adalah kemampuan alami manusia yang memiliki nalar, akal sehat rasio dan kemampuan untuk hidup berkebajikan.\n\nManusia yang hidup berselaras dengan alam adalah manusia yang hidup sesuai desainnya, yaitu manusia yang bernalar.\n\nKetika kita tidak menggunakan nalar, kita menjadi rentan merasa tidak bahagia. Karena kita tidak selaras dengan alam, bayangkan singa yang seharusnya dipadang savana tapi kini ia harus ada diruangan kecil dikebun binatang.\n\nContoh ketika kita kehilangan nalar,\n\nKita baca postingan di media sosial yang bernada provokatif dan langsung emosi. Marah marah dibagian komen, memfoward tanpa mencari tau sebenarnya.\n\nKalau lo pernah ada diposisi itu, coba pikir lagi deh. Apakah semua tindakan tadi membawa hasil positif?\n\nSebisa mungkin disetiap situasi hidup kita tidak kehilangam nalar kita dan berlaku seperti binatang dan akhirnya berujung pada ketidak bahagiaan.\n\n## Bab 4\n### Dikotomi Kendali\n\nAda hal-hal yang dibawah kendali kita dan ada juga yang tidak.\n\nContoh yang tidak dibawah kendali kita.\n\n1. Opini orang lain\n2. Reputasi\n3. Kesehatan\n4. Kekayaan\n5. Kondisi saat lahir\n\nKalo yang ada dibawah kendali kita itu, contohnya\n\n1. Pertimbangan, opini pribadi atau persepsi kita\n2. Keinginan kita\n3. Tujuan kita\n4. Pikiran dan tindakan kita sendiri\n\nHal-hal dibawah kendali kita itu bersifat merdeka, tidak terikat, tidak terhambat. Sebaliknya yang tidak dalam kendali kita bersifat lemah, terikat dan milik orang lain.\n\nYa lo siap siap kecewa aja kalo lo terobsesi dengan apa yang tidak ada dibawah kendali lo.\nlogak perlu ambil pusing dan khawatir dari perbuatan atau opini orang lain, apa lagi sampai lo menyesali dilahirkan oleh orang tua lo.\n\nStoa mengajarkan, kebahagiaan sejati cuma bisa datang dari apa yang bisa lo kendalikan. Lo gak bisa tuh menggantukan kebahagiaan lo dari orang lain atau yang tidak bisa lo kendalikan.\n\nKalau gitu apa stoisme mengajarkan untuk pasrah pada keadaan?\n\nSama sekali tidak, Di semua situasi bahkan pada saat kita tidak ada dalam kendali pun, selalu ada bagian dalam dari diri kita yang tetap merdeka, yaitu pikiran dan persepsi.\n\nLo bisa aja dalam kondisi terburuk seperti kisah james stockdale yang menjadi tawanan selama lebih dari tujuh tahun, dimana teman temanya sudah menyerah dan akhirnya mati. james memilih cara lain untuk tetap bertahan hidup hingga akhirnya dia bisa diselamatkan.\n\nManusia tidak memiliki kuasa untuk memiliki apapun, tapi dia memiliki kuasa untuk tidak mengingini apa yang dia belum miliki dan dengan gembira memaksimalkan apa yang dia terima.\n\n## Bab 5\n### Mengendalikan Interpretasi dan Persepsi\n","n":0.027}}},{"i":56,"$":{"0":{"v":"Developer Advocate","n":0.707}}},{"i":57,"$":{"0":{"v":"Dare to Lead","n":0.577},"1":{"v":"\n#self-improvement\n#brené-brown\n\nBrave work, Tough conversations, Whole heart.\n\nJadi buku ini dibuat dari riset-riset yang dilakukan oleh penulis, \nyang ditujukan kepada pembaca agar menjadi bacaan yang dapat dilakukan untuk menjadi pemimpin yang berani.\n\nDari banyaknya interview dengan para pemimpin, penulis selalu bertanya kepada mereka, \n\nApa yang dilakukan pemimpin untuk berhasil dalam lingkungannya yang kompleks dan berubah dengan cepat?\n\nJawabannya beragam, tapi yang paling sering muncul adalah jawaban\n\n`Kita membutuhkan pemimpin yang lebih berani dan budaya (culture) yang lebih berani.`\n\nYang dimaksud pemimpin menurut penulis itu adalah,\n\nPemimpin adalah siapapun yang mengambil tanggung jawab untuk menemukan potensi didalam seseorang atau proses,\ndan berani untuk membangun potensi itu.\n\nLalu penulis bertanya lagi, bisakah kalian merinci keterampilan khusus yang anda yakini dapat mendukung kepemimpinan yang berani? hmm, ini tuh sesuatu yang kita miliki dan tidak kita miliki.\n\nLebih dari 80% pemimpin percaya kalau keberanian itu adalah perilaku bukan kemampuan.\n\nMereka lebih bersemangat berbicara tentang beberapa masalah, seperti behavioral problem dan cultural problem yang merusak kepercayaan dan keberanian.\n\nMisalnya, menghindari percakapan yang sulit, seperti memberikan `feedback` yang jujur dan produktif.\n\nPenyebabnya bisa jadi karena, kurangnya keberanian, kurangnya keterampilan, sisanya masalah norma \"merasa gak enakan, merasa gak sopan\" yang sering digunakan sebagai alasan untuk menghindari percapakan yang sulit seperti itu.\n\nAkbatnya, ada ketidakjelasan yang akan mengurangi kepercayaan dan keterlibatan serta mendorong perilaku [pasif-agresif](https://www.verywellmind.com/what-is-passive-aggressive-behavior-2795481) alias ngomongin dibelakang.\n\nMeskipun ini sepertinya masalah organisasi ditempat kerja, tapi sebenarnya masalah ini berasal dari manusia.\n\nAda beberapa contoh lagi dibukunya, kalo penasaran silahkan dibaca.\n\nOya, dibuku ini ada hasil pembelajaran dari penulis. Judulnya\n\n### The Heart of Daring Leadership\n\nAda tiga point,\n\n1. Kita tidak bisa mendapatkan keberanian tanpa bregemuruh dengan kerentanan, rangkulah kelemahan kita.\n\n  Yang dimaksud dengan gemuruh adalah diskusi, percakapan atau pertemuan yang didasari oleh kerentanan. Mengidentifikasi masalahnya, hadapi dan mencoba lagi tanpa rasa takut dan belajar dari kesalahan.\n\n2. Kesadaran diri dan cinta diri itu penting. Siapa kita adalah bagaimana kita memimpin.\n\n3. Keberanian itu menular.\n\n  Untuk meningkatkan kepemimpinan dan membangun keberanian didalam tim dan ognasisasi. Kita harus menumbuhkan budaya kerja yang berani, tough conversation dan sepenuh hati dan armor (jabatan) tidak diperdulikan.\n\nPemimpin yang berani harus peduli dan terhubung dengan orang-orang yang dipimpinnya.\n\n## Rumbling with vulnerability\n\nApa itu vulnerability / kerentanan? Menurut penulis kerentanan bukanlah hal  menang atau kalah, tetapi lebih ke perasaan kita. \n\nMisalnya, memulai sesuatu yang baru, misal mulai bisnis baru atau ketika kita baru saja diberhentikan dari perkerjaan, atau sesimple meminta maaf kepada teman, mendapatkan feedback. Itu semua membuat kita merasa cemas, takut dan bimbang.\n\nIntinya kita pasti akan ada momen momen ketika kita merasa rentan waktu kita berada diketidak-pastian, resiko dan paparan emosi.\n\nKerentanan adalah emosi manusia yang wajar dan dirasakan oleh semua orang. \nKerentanan membutuhkan keberanian,dan bukan suatu kelemahan.\n\nTanpa kerentanan tidak akan ada invovasi dan kreativitas. Tidak ada inovasi tidak akan ada jika tidak belajar dari kesalahan.\n\nComedian [Amy Poehler](https://www.goodreads.com/quotes/960017-it-s-very-hard-to-have-ideas-it-s-very-hard-to), bilang, `Sangat sulit untuk memiliki ide. Sangat sulit untuk menempatkan diri diluar sana, Sangat sulit untuk menjadi rentan, Tetapi pemimpi, pemikir dan creator orang orang ajaib yang berani melakukannya.`\n\nJadi, kemampuan kita untuk berubah, melakukan percakapan yang sulit, memberikan feedback yang produktif, dan jujur yang merupakan keterampilan kepemimpinan yang berani, semuanya lahir dari kerentanan.\n\n## Hidup didalam value kita\n\nPerjelas apa yang jadi value kita dan bertindak sesuai dengan value yang kita percayai.\n\nYang dimaksud value apa? gimana kita mau hidup didalam value kalo kita gak tau?\n\nContoh value bisa dilihat [disini](https://daretolead.brenebrown.com/wp-content/uploads/2019/02/Values.pdf). \n\nTanya pada diri kita:\n\n- Value apa yang mendefinisikan saya?\n- Apakah ini yang tebaik untuk saya?\n- Apakah value ini menjadi filter yang bisa saya gunakan untuk membuat keputusan yang sulit?\n\nPilih satu atau dua value yang akan kita yakini. \n\nLalu bawa value tersebut dari sekedar bullshit menjadi behavior. \n\nCoba lihat workbook [ini](https://daretolead.brenebrown.com/wp-content/uploads/2018/10/DTL-Read-Along-Workbook-v1.pdf)\n\nIsi pertanyaan yang ada dihalaman 31. \n\nSelanjutnya, Berempati dan welas asih adalah hal terpenting.\n\nLalu belajar cara memberi feedback dan menerima feedback.\n\nDibuku ini ada petunjuk untuk memberikan feedback.\n\n1. Saya tau, saya siap memberikan feedback ketika saya siap untuk duduk disebelah anda daripada disebrang anda.\n\n2. Saya tau, saya siap memberikan feedback ketika saya bersedia meletakan masalah didepan kita daripada diantara kita (atau diarahkan kepada anda)   \n\n3. Saya tau, saya siap memberikan feedback ketika saya siap untuk mendengarkan, mengajukan pertanyaan dan menerima kalau saya mungkin tidak sepenuhnya memahami masalah ini.\n\n4. Saya tau, saya siap memberikan feedback ketika saya siap untuk mengakui apa yang anda lakukan dengan baik, bukan hanya mencari cari kesalan anda.\n\n5. Saya tau, saya siap memberikan feedback ketika saya mengenali kekuatan anda dan bagaimana anda dapat menggunkannya untuk mengatasi tantangan anda.\n\n6. Saya tau, saya siap memberikan feedback ketika saya dapat meminta pertanggung jawaban anda tanpa mempermalukan atau menyalahkan\n\n7. Saya tau, saya siap memberikan feedback ketika saya terbuka untuk memili bagian saya.\n\n8. Saya tau, saya siap memberikan feedback ketika saya benar benar dapat berterima kasih kepada seseorang atas upaya mereka daripada hanya mengkritik mereka karena kegagalan mereka.\n\n9. Saya tau, saya siap memberikan feedback ketika saya dapat berbicara tentang bagaimana menyelesaikan tantangan ini yang akan mengarah kepada pertumbuhan dan kesempatan.\n\n10. Saya tau, saya siap memberikan feedback ketika saya dapat mencontoh kerentanan dan ketebukaan yang diharapkan dari ana.\n\nItu dalah sepulu petunjuk yang akan menjadi panduan ketika kita akan memberikan feeback.\n\nLalu bagaimana sikap yang baik ketika menerima feedback?\n\n1. Saya berani mendengarkan dan menerima\n2. Ambil sesuatu yang berharga, ambil yang baiknya buang sisanya.\n3. Percaya setiap feedback yang diterima adalah jalan menjadi lebih baik.\n\n## Kepercayaan adalah hal yang penting\n\nSeberapa jauh kita bisa dipercaya dan berapa banyak orang yang betul betul kita percayai.\n\nPenulis telah membuat tujuh peroilaku yang mendorong kepecayaan. dan disingkan BRAVING.\n\nB adalah Boundaries (batas) artinya kita harung menghormati batasan orang lain.\n\nR adalah reliability (dapat diandalkan) apa yang kita katakan itu yang kita lakukan. Kita harus menyadari kemampuan dan keterbatasan kita, sehingga kita tidak berlebihan dan akibatnya tidak bisa memenu komitment yang telah kita katakan.\n\nA adalah accountability, kita bertanggungjwab atas kesalahan kita, benari meminta maaf dan mencoba dan mencari jalan terbaik untuk menebus kesalahan.\n\nV adalah vault (lemari besi), anggap lah kita seperti lemari besi informasi.Kita harus jaga informasi penting yang bukan milik kita.\n\nI adalah integrity (integritas). lakukan apa yang benar daripada cari jalan pintas cari yang mudah, menyenangkan, tapi mengorbankan kebenaran.\n\nN adalah non-juggement (tidak menghakimi), dengan tidak menghakimi orang akan memberitahu apa yang sebenarnya mereka rasakan dan meminta bantuan tanpa mengharapkan kita menghakimi mereka.\n\nG adalah generosity (kemurahan hati) orang akan lebih mempercayai kita kalau mereka tau kita selelu melihat yang terbaik dari orang lain bukan yang terburuk.\n\nTerapkan perilaku ini untuk menjadi pemimpin yang sukses dan bisa dipercaya.\n\n\n## Belajar dari kegagalan membantu menjadi lebih berani\n\nPelajaran bagi pemimpin? kalau kita ingin lebih berani, maka yang terbaik adalah dengan mempersiapkan diri untuk jalan yang tidak mulus.\n\nKita bisa ambil pelajaran dari skydivers, calon skydivers akan dizinkan untuk terbang diatas langit ketika mereka susah menghabiskan banyak sesi pelatihan untuk belajar bagaimana cara mendarat dengan aman, mulai dari ketinggian yang rendah misal lompat dari tangga.\n\nPara pemimpin dan pelatih kepemimpinan menyadari perlunya pelatihan ketahanan ini. Tapi bisanya mereka lakukan setelah mengalami kegagalan atau pas krisis terjadi. \n\nCoba bayangkan jika skydivers yang seperti itu, terjun bebas tanpa pernah mencoba berlatih dan belajar gagal mendarat dari ketinggian yang rendah.\n\nAda cara lebih baik, yaitu mencoba belajar sejak dini, dengan belajar sedari awal, akan menimbulkan perilaku lebih berani. Kenapa? karena setelah pelatihan kita akan yakin dengan kemampuan untuk bangkit kembali jika perilaku berani kita tidak membuahkan hasil yang baik.\n\nNamun, beberapa organissari khawatir kalau mengajari cara gagal sejak awal akan mendorong performa yang rendah.\n\nPadahal, yang terjadi malah sebaliknya.\n\nMisalnya, di perusahaan penulis sendiri, dia menjadikan prioritas untuk mengajarkan keterampilan untuk gagal dan ketahan sebagai bagian dari proses orientasi untuk para karyawan baru.\n\nIni adalah cara perusahaan memberitahu karyawan baru, kalau keberanian mereka sangat diharapkan tapi kegagalan juga tetap diekspektasikan sesekali.\n\npernahkan dengar slogan \"Fall forward\" and \"fail fast\" kalau tanpa program keterampilan ketahanan akan membuat banyak kerusahakan dari pada kebaikan.\n\nKenapa?\n\nKarena para pemimpin yang gagal tanpa keterampilan ketahanan akan dengan cepat merasakan sedang berhadapan dengan rasa malu dua kali lipat lebih dari orang yang belajar keterampilan ketahanan.\n\n## Perfeksionisme menggagalkan kita dari peningkatan diri dan keberanian\n\nSalah satu jenis perlindungan diri yang paling luas adalah perfeksionisme. Untuk menjadi pemimpin yang berani, kita harus membersihkan diri dari perfeksionisme.\n\nKita harus mendobrak dari mitos mitos perfeksionisme ini.\n\nmitos yang paling merusak adalah kalau perfeksionisme adalah tentang perbaikan diri dan berjuang untuk keunggulan.\n\nPadahal kenyataannya, perfeksionisme sebenarnya tentang upaya untuk memenangkan penerimaan, ingin mendapat pujian dari lingkungan, butuh pengakuan dan selalu bertanya \"Apa pendapat orang lain tentang gw?\"\n\nSebaliknya, orang orang dengan dorongan yang sehat untuk sukses, jauh lebih fokus pada diri sendiri dan terinspirasi dengan bertanya pada diri sendiri bagaimana cara mereka bisa bertumbuh.\n\nOrang orang perfeksionis sering berasumsi kalau cara berpikir ini akan membawa mereka sukses, \n\nSebenernya sih gak salah juga dengan perfksionis, tapi ada yang mengganggu dari penelitian yang dilakukan penulis. kalau perfeksionisme dikaitkan dengan kecanduan, depresi dan kecemasan. lebih jauh lagi perfeksionis lebih cenderung kehilang peluang dan mengalami kelumpuhan mental yang membuat mereka gak sepenuhnya terlibat dalam kehidupan.\n\nKenapa?\n\nKarena ketakutan ketika dikritik atau gak memenuhi harapah orang lain.\n\nUntuk menjadi pemimpin yang berani, lepaskan tameng perfeksionis ini dan masuklah ke kehidupan yang nyata. Kita mungkin membuat kesalahan dalam proses, tetapi kita akan mendaptkan sesuati yang berharga sebagai gantinya. Keberanian untuk berhasil dan memimpin.\n\n## Yang gw dipelajari\n\nKetika kita jujur dan menerima kerentanan, artinya kita telah membuka diri terhadap keberanian dan kreativitas.\n\nKetika kita melepaskan sikap perfeksionis dan ketakutan akan kegagalan, artinya kita menemukan keberanian untuk memperbaiki diri kita.\n\nKita perlu semua emosi, untuk mengikuti kita jika ingin menjadi pemimpin yang berani.\n\n```\ncatatan:\n\nbanyak banget yang bisa diambil dari buku ini dan sepertinya ringkasannya akan diperbaharui.\n```","n":0.026}}},{"i":58,"$":{"0":{"v":"14 Habits of Highly Productive Developers","n":0.408},"1":{"v":"\n#self-improvement\n#zeno-rocha\n\nBuku ini ditulis oleh Zeno Rocha pada tahun 2020, dia juga menginterview atau bertanya ke beberapa software engineer yang berkerja di perusahaan-perusahaan besar seperti Google, Microsoft, Spotify, Amazon dan lain lain.\n\n## Part One: Principles\n- Apa sih keunikan dari  orang-orang yang berkeja di perusahaan besar?\n- Apa yang spesial dari seseorang yang aplikasinya digunakan oleh banyak orang?\n- Bagaimana beberapa programmer bisa sangat produktif ditempat kerja dan juga diluar kerjaan mereka?\n\nPertanyaan diatas yang sedang dicari jawabannya oleh penulis, buku ini bukanlah tentang jalur kesuksesan yang pasti, akan tetapi buku ini adalah pencarian atau penyelidikan kepada programmer yang produktif diluar sana.\n\n### Why [[Habits]]?\n\nSemuanya mengenai kebiasaan, seperti yang dikatakan oleh James Clear, yang ditulis pada bukunya *atomic habits*.\n\nKebiasaan adalah *compound interest* dari perkembangan diri. Sama seperti uang yang bunga berbunga, efek dari kebiasaan akan terasa berlipatganda jika kita terus mengulanginya. \n\nDaripada kita bertanya apa bahasa pemrograman yang harus kita pelajari lebih baik tanyakan pertanyaan seperti ini:\n\n> Apa kebiasaan yang perlu saya kembangkan agar efektif dalam bahasa pemrograman apapun?\n\n## Part Two: Learning Habits\n\n### Habit 1: Look for the signals\n\nDaripada FOMO (Fear of missing out) mendingan JOMO (Joy of missing out). Senangi sesuatu yang sudah lo tau atau sudah ada. Ambil pelajarannya dan cari alternatifnya. \n\nAkan banyak orang yang terus jualan, apapun yang menurut mereka itu yang terbaik. Perlu diingat apa yang terbaik buat mereka bisa jadi gak cocok buat lo.\n\nPilihlah informasi yang sesuai dengan kebutuhan lo. Ya gak perlu se extreme, menghapus semua sosial media atau unsubsrcribe semua newsletter, ribet. digital detox seperti itu cuma membantu sementara dan bukan solusi untuk jangka panjang. Lo harus bisa membentuk kebiasaan memilih informasi yang relevan buat karir lo.\n\nTerima aja kalo lo gak bisa belajar semuanya.  Keinginan mah gak ada batasnya, kebutuhan itu terbatas. Terima aja kalo sesuatu yang baru gak selalu lebih bagus.\n\n#### Yang harus dilakukan\n\nBuatlah list dari semua teknologi dan tools yang ingin lo pelajari. Lalu labelin dengan prioritas berbeda, \"Minggu ini\", \"Bulan depan\", \"Tahun depan\". Kapanpun lo merasa ketinggalan sesuatu dari sesuatu yang lagi trend, coba check lagi list ini dan atur ulang prioritasnya.\n\n#### Pertanyaan & Jawaban\n\nQ: Bagaimana lo memutuskan teknologi yang mau dipelajari dan menginvestasikan waktu lo untuk mempelajarinya?\n\n- [Daniel Buchner](https://twitter.com/csuwildcat) (Microsoft):\n\n\tDia fokus ke beberapa pertanyaan dibawah ini\n\n\t1. Apasih kebutuhan teknikal yang sedang gw kerjakan saat ini?\n\t2. Seberapa mudah untuk orang lain dapat ikut merngerjakan apa yang gw buat? dan seperti apa mereka mengintegrasikan kedalam proyek yang sedang mereka kerjakan?\n\t3. Apakah yang saya lakukan sudah selaran dengan standar dan spesifikasi yang saya yakini akan bertahan lama?\n\n- [Addy Osmani](https://twitter.com/addyosmani) (Google)\n\t\n\tTerima aja lo gak bisa belajar semuanya, tapi lo bisa belajar untuk menjadi efektif. Saya menginvestasikan waktu disore hari. Dan selalu bertanya-tanya:\n\t\t- Apakah hal ini mengimprove produktifitas saya?\n\t\t- Apakah hal ini mengimprove user experience dari project yang biasa saya buat?\n\tKalau jawabannya iya semua, pertimbangin buat meluangkan waktu untuk belajar lebih dalam.\n\t\n\tKarena waktu itu terbatas dan banyak banget teknologi yang mesti saya coba. Lebih bagus lagi kalo kita bisa menemukan keseimbangan dari apa yang kita pilih agar tetap efektif.\n\t\n- [Loiane Groner](https://twitter.com/loiane) (Citibank)\n\n\tDia selalu bertanya beberapa pertanyan kepada dirinya sendiri.\n\t- Masalah apa yang dipecahkan oleh teknologi?\n\t\t kita sebagai developers dibawa buat menyelesaikan masalah bukan cuma nulis ocde. \n\t- Jadi masalah apa yang ingin dipecahkan sama teknologi atau framework baru ini?\n\t- Apa yang membedakan dari yang sudah ada?\n\t- Apakah saya butuh belajar sesuatu yang baru?\n\t- Bisa kah saya mengambil manfaat dari kemamupan dan pengetahuan yang sudah ada?\n\t- Bagaimana infrastructurenya? apakah ada cloud provider yang sudah support teknologi baru ini? atau infrastructure saya saat ini sudah mendukung?\n\n\tDiluar dari pertanyaan diatas, lo juga harus belajar overview dari teknologinya, mungkin coba dikantor lo atau personal project buat lo latihan menggunakan teknologi baru ini.\n\t\n\tLalu coba lihat seberapa banyak perusahaan yang menggunakan teknologi yang mau lo pelajari itu. Bikin POC, belajar semua skenario apa yang diperlukan untuk maintain project.\n\t\n### Habit 2: Focus on the fundamentals\n\nMengtip dari Michael Jordan:\n\n> You can practice shooting eight hours a day, but if your technique is wrong, then all you become is very good at shooting the wrong way. Get the fundamentals down and the level of everything you do will rise.\n\nMemahami fundamental atau inti  dari konsep itu penting. Seperti algoritma, logic, network, accessbility, security and user experience. Memang betul, kita tidak membutuhkan semuanya ketika membuat aplikasi pertama kita, tapi mengetahui fundamental ini akan membantu kita untuk membuat aplikasi yang lebih kompleks dimasa depan.\n\n#### Yang harus dilakukan\n\nLuangkan waktu untuk research fundamental konsep dari apa yang kita kerjain sekarang. Ambil kertas dan bagi mendjadi 2 kolom. Kolom sebela kiri, tuliskan apa pengetahuan yang sudah kita pahami. Dan kolom sebelah kanan isi dengan list pengetahuan yang ingin kita pahami. Rencanakan dan dedikasikan waktu untuk mempelajari konsepnya.\n\n#### Pertanyaan & Jawaban\n\nQ: Bagaimana pendekatan anda dalam mempelajari bahasa pemrograman baru hari ini?\n\n- [Lais Andrade](https://uk.linkedin.com/in/lais-andrade-55981930) (Google):\n\nPendekatan saya untuk belajar bahasa pemrograman baru sama seperti pendekatan belajar framework baru. Saya coba untuk mendapatkan perngertian dasar dari konsep dan mencari example dari hal lain yang menyelesaikan problem yang sama.\n\nDan yang paling penting adalah saya coba mengerti apa pun yang saya tulis. Baca dokumentasi dan mengerti teori dibelakangnya. Saya butuh percaya diri tentang kenapa ini adalah pilihan terbaik.\n\n- [Fabio Costa](https://twitter.com/fabiomiranda) (GoDaddy, Ex-Facebook):\n\t\n\tSaya belajar bahasa pemrograman baru dengan mengambil salah satu dari pet project saya yang sudah ada lalu tulis ulang menggunakan bahasa pemgrograman baru itu. Opini saya ini adalah cara paling efisien untuk belajar bahasa pemrograman baru, karena saya bisa fokus 100% hanya untuk belajar bahasa pemrograman.\n\t\n- [Michael Lancaster](https://twitter.com/weblancaster) (BlackBerry):\n\n\tSaya gak punya pendidikan komputer. semua berawal dari ABC (always be coding). Saya biasanya ambil tutoral dari youtube yang membuat project dan saya pilih youtuber yang membahas lebih dalam ke fundamental. Selain itu dokumentasi resmi, project unit test dan opensource project menjadi referensi saya juga.\n\t\n### Habit 3: [[Teaching]] equals [[learning]]\n\nPenulis sudah melakukan persentasi mulai dari tahun 2011, sudah 100 acara dia menjadi pembicara. Dia juga sudah pergi ke 16 negara dan 71 kota untuk presentasi. Menurut kalian ini tidak membuat saya takut ketika berbicara didepan orang banyak? hmm, seujurnya setiap saya masuk ke panggung saya tetap masih merasa takut.\n\n> Kalo lo mau belajar sesuatu, lu harus ngajajarin.\n\nDengan lu coba menjelaskan ke orang lain, lo bisa mengambil sesuatu yang paling penting untuk dibagikan kepada orang lain. Menuliskan apa yang sedang lo pelajarin itu membuat lo lebih dapat mengingat.\n\nAda banyak cara untuk mengajari orang lain, bisa posting disosial media, tulis blog dan merekam screen cast. Kalo favoritnya penulis adalah dengan mejadi pembicara.\n\n#### Yang harus dilakukan\n\nTemukan acara online dan submit presentasi. Rekam pembelajaran lo dan bagikan. Bikin blog dan bagikan artikel. Pilih topik yang mau lu pelajari dan coba untuk mengajari.\n\n#### Pertanyaan & Jawaban\n\nQ: Apakah kalian pernah mengajar didepan umum? Bagaimana itu mempengaruhi hidup kalian?\n\n- [Fernando Tadashi](https://br.linkedin.com/in/ftadashi) (Adobe):\n\n\t Saya tidak ada habit dalam memberikan pelajaran untuk audience yang besar, tapi saya berkerja di area konsulting. Audience saya selalu membutuhkan saya mengetahui maximum dari pengetahuan teknikal saya.\n\t \n- [Loiane Groner](https://twitter.com/loiane) (Citibank)\n\t\n\tSaya menjadi pembicara, menulis beberapa buku, membuat beberapa video di youtube dan selalu diundang untuk mengajar dikelas tambahan dikampus.\n\t\n\tUntuk mengetahui konsep atau teknologi dengan cara membuat  praktical project. Cara efektif lainnya adalah dengan menjelaskan ke orang lain. Dengan kata lain mengajar adalah cara yang hebat untuk belajar tentang spesifik topik.\n\t\n- [Addy Osmani](https://twitter.com/addyosmani) (Google)\n\t\n\tBenar! Mengajari orang lain mengubah lo untuk menjadi lebih baik. Memaksa lo buat kritis dan selalu bertanya.\n\t- Apakah gw benar benar paham dengan topic ini?\n\t- Bisa gak gw menjelaskan ke pemula dalam hitungan menit?\n\n\tTerkadang ketika lo perlu menjelaskan sesuatu kepada orang lain, itu menantang lo buat menyederhanakan ke ide paling utama. Ini akan memaksa lo untuk terus improve pengetahuan.\n\t\n\tMengajari orang lain membantu lo buat bertanya apakah lo beneran paham apa engga. Lo mungkin tau secara umum tapi lo tau gak lebih dalam dari topik yang paling lo minati? Apakah masuk akal buat belajar lebih jauh lagi?\n\t\n## Part Three: Daily Habits\n\n### Habit 4: Be Boring\n\nSebenarnya programmer yang bagus itu kaya gimana sih?\n\nNan untuk menjwab itu, kita perlu tau ada istilah permainan terbatas dan permainan tidak terbatas.\n\nPermainan terbatas itu seperti sepak bola ada waktu dan tujuannya. \nSesangkan permainan terbatas itu seperti pernikahan tidak ada yang akan menang atau kalah yang ada adalah bagaimana mempertahankannya.\n\n#### Yang harus dilakukan\n\nApakah kamu bermain dipermainan terbatas atau tidak terbatas?\nBerapa banyak lo meluangkan waktu untuk mengejar keuntungan jangka pendek vs menginvestasikan waktu untuk hasil yang panjang.\n\n#### Pertanyaan & Jawaban\n\nQ: Coba deh pikirin tentang programmer terbaik yang pernah kerja bareng lo. Apa yang mereka lakukan terus menerus yang membuat dia bisa bagus?\n\n- Luciano Sousa (Shopify):\n\t\n\tSaya pikir saya belajar banyak dari orang orang yang selalu memiliki jadwal/agenda yang baik dalam hidup mereka. Mereka selalu tepat waktu, memulai dan menyelesaikan perkerjaan mereka pada yang tepat setiap hari.\n\t\n\tOrang orang ini menunjukan kepada saya ahwa saya anya akan menang jika saya dapat mengatur hari saya dengan cerdas dan menghindari penundaan. Secara umum, mereka memiliki dampak positif dalam hidup saya. mendorong saya untuk selalu mecoba membangun pola kerja sehari hari yang sederhana dan lugas. tidak terlalu banyak dan tidak terlalu sedikit.\n\t\n- Berg Brandt (Amazon, Ex-Yahoo):\n\t\n\tYang paling saya hargai adalah integritas tinggi. Integritas tinggi memanifestasikan dirinya dalam berbagai bentuk dan programmer terbaik yang pernah berkerja dengan saya telah menunjukan integritas yang dingi dalam beberapa cara. Yang paling dasar adaalah fokus pada melakukan hal yang benar dan untuk alasan yang benar.\n\t\n\tProgrammer berintergitas tinggi memperhatikan hasil dan mengapa itu penting. Sementara mereka akan berlajir jika perlu,, mereka secara konsisten tanpa henti berbari menuju tuuan.\n\tMereka aalah orang orang yang secara proaktif akan memanggil jika ada sesuatu yang salah atau memanggil anda jika renaca atau arahan anda perlu penyesuaaian.\n\t\n\tmerekalah yang mengerjakan proyek yang tidak begitu glamor hanya karena penting unuk diselesaikan. Terakhir, mereka adalah orang orang yang akana berada disampng anda membantu menemukan solusi ketika dalam keadaan buruk.\n\t\n- Caio Gondim (New York Times):\n\t\n\tMenurut saya programmer terbaik adalah yang dapat diandalkan (reliable). lo gak bisa konsisten kalo gak reliable. mereka tau bahwa tidak layak berkerja sepanjang malam dan keesokan harinya tidak bisa befikir jernih.\n\t\n\tmereka tau bahwa sangat penting untuk bersenang senang dan makan dengan baik. mereka tidak memberikan estimasi dalam kondisi sempurna, karena mereka tau sangat jarang mendapatkan satu hari penuh tanpa gangguan. mereka tau bahwa akan ada meeting, sesuatu pada production dan membantu orang lain dalam membaca source code.\n\t\n- Blake Williams (GitHub):\n\t\n\tSaya melihat sebuah polah yang saya anggap sebagai programmer terbaik, semuanya disiplin. Mereka selalu punya waktu menulis kode yang baus, menambahkan cakupan pengujuan yang komperhensif dan menjelaskan detail seluk beluk melalui pesan commit message yang terperinci.\n\t\n\tprogrammer yang disiplin ini tidak berkerja sepanjang malam dan stres pada delivery fitur berikutnya. Mereka menginvestasikan waktu dalam melakukan sesuatu yang baik dan berkomunikasi dengan jelas. Disiplin itu membantu orang lain dalam tim merasa tidak terburu buru dan memungkinkan mereka menginvestasikan waktu untuk meningkatkan ppekeraan mereka yang sudah ada dari pada pindah ke tugas berikutnya. Pada akhirnya mereka menghemat waktu mereka dan tim mereka dengan memperlambat mengambil pendekatan pragmatis untuk pemecahan masalah.\n\n### Habit 5: Do It For Your Future Self\n\nJangan menjadi sok pintar, jangan mencoba membuat kode yang membuat lo merasa lebih pintar. Lo gak perlu pamer trik baru  yang baru aja lo pelajari. cukup dengan menulis kode yang dapat dibaca. Pikirin tentang maintainabilityu dan gunakan nama yang bermakna untuk variable dan function lo. Tanyakan pada diri sendiri: Apakah dimasa depan saya akan paham kode maksud dari kode ini?\n\n#### Yang harus dilakukan\n\nBuka project yang sedang lo kerjakan. Apakah ada refactoring yang bisa lo lakukan untuk membuat kehidupan dimasa depan jadi lebih mudah?\n\n#### Pertanyaan & Jawaban\n\nQ: Hal-hal apa yang lo lakukan dihari ini untuk membantu lo dimasa depan?\n\n- Silvio Gustavo (Spotify):\n\n\tSaya mencoba berempati dengan siapapun yang dapat menyentuh kode itu dimasa depan, termasuk diri saya dimasa depan. Apakah kode ini dapt dibaca oleh siapa pun dengan tingkat pengalaman apapun? Dengan pemikiran itu saya menargetkan.\n\t\n\t1. Tulis kode sederhana dengan nama variabel/method/class yang bermakna. Jangan berasumsi bahwa orang lain (termasuk lo) akan memahami nama pendek yang tidak berarti banyak.\n\t2. Punya automated testuang baik, ini akan memberikan dokumentasi tambahan tentang kode anda dan juga membantu siapa saja yang perlu menyentuh kode itu dimasa depan.\n\t3. Gunakan version control sebagai dokumentasi. Ketika proyek berkembang, perubahan dan pebaikan bug dilakukan setiap saat. Dimasa depan ketika itu menjadi legacy code tidak ada yang bisa memahamu keputusan dan perubahan yang dibuat saat itu jika tidak didokumentasikan.\n\n-  Lais Andrade (Google):\n\n\tSalah satu hal terbaik untuk menjaga basis kode dimasa depan adalah memiliki standar yang baik untuk praktik terbaik dan ini haru diikuti oleh tim. \n\t\n\t early optimization is the root of all evil. Sangat mudah menulis satu baris tanpa komentar, tapi nanti akan sulit untuk mendebug kode itu dalam waktu beberapa minggu, bulan atau tahun.\n\t Peer review juga sangat penting.\n\t \n\t Test semua kode yang lo tulis. Unit test,integration, performace/benchmark test. semuanya. Bikin aturan semuakode harus ada testnya.\n\n\n\n### Habit 6: Your 9-to-5 Is Not Enough\n\nmenurut penulis jam 9  ke 5 ini gak cukup untuk untuk berkari didunia teknologi.\n\n#### Yang harus dilakukan\n\nPikirkan tentang keterampilan yang menurut lo dapat ditingkatkan. Bisakah lo merencanakan waktu ekstra untuk mengembangkannya? 10 menit sehari juga tidak apa apa itu juga bisa membuat pebedaan.\n\n#### Pertanyaan & Jawaban\n\nQ: Bagaimana lo menghabiskan waktu luang? Bagaimana lo menyeimbangkan personal dan perkerjaan?\n\n- Silvio Gustavo (Spotify):\n\n\tSaya dulu menghabiskan waktu dengan menyelam lebih dalam pada internal android , best practice dan arsitektur code. ini sudah seperti hobi buat saya.\n\t\n\tPada titik tertentu, meskipun saya suka, tapi terkadan merasa tsres ketika menggabungkannya dengan pekerjaan 9-5. saya kemudian memutuskan untuk memperlambat dan menggunakan waktu luang saya untuk melakukan lebih banyak ha; seperti main game dan mempelajari hobi baru dan berolahraga. Saya memili keseimbangan kehidupan kerja yang jauh lebih baik saat ini.\n\t\n- Fernando Tadashi (Adobe):\n\t\n\tSaya mendedikasikan waktu saya untuk tau teknologi baru dan yang masih digunakan. terkadang saya belajar lebih dalam.\n\t\n- Fabio Costa (GoDaddy, Ex-Facebook):\n\n\tPada akhir pekan saya cenderung lebih banyak bekumpul dengan keluarga dan teman teman atau mengerjakan pet project.\n\n\n## Part Four: Career Habits\n\n### Habit 7: Master The Dark Side\n\nJaman dulu belajar bahasa pemrograman itu cuma ada di universitas yang bagus bagus saja. saat ini suah berbeda tidak perlu ke universitas sudah banyak bootcamp , tutorial dan kurus menjadi programmer.\n\nPada dasarnya programmer adalah penerjemah, tugas kita adalah menerjemahkan kebutuhan pengguna kedalam fungsi. Biasanya kebutuhan itu akan dibuat oleh BA (bisnis analis). Pada awalnya saya merasa orang bisnis itu seperti orang jahat tidak peduli dengan kualitas kode saya, tapi pada akhirnya saya menyadari ssi bisnis dapat membatu saya dalam aktifitas sehari hari.\n\n1. Hemat Waktu: Semakin lo paham bisnis, semakin mampu lo untuk memecahkan masalah itu sendir. \n2. Mencegah kode yang rumit: Kita selalu ingin membuat kode yang abstrak, fleksibel dapat diextend dan dapat digunakan kembali. Kita sangat ingin seperti itu hingga kita membuat aplikasi yang terlalu rumit.\n3. Prioritas yang lebih baik: Dengan pengethuan bisnis akan lebih mudah untuk memprioritaskan keputusan mikro. Lo bisa mengantisipasi mana bagian yang lebih penting.\n\nRekomendasi saya adalah mulai dengan kosakata atau vocabulary. Perhatikan kata dan istilah kusus yang digunakan oleh para pebisnis. Jika lo meniru terminologi yang sama komunikasi dengan mereka akan jauh lebih baik.\n\nIngat, orang yang tau cara membuat kode iti kuat, orang yang tau membuat kode dan tau cari kejar bisnis tidak dapat dihentikan.\n\n#### Yang harus dilakukan\n\nElaborasi daftar istilah yang paling umum digunakan dalam industri lo. Mulailah percakapan dengan teman kerja lo untuk memahami bidang mereka. Misalnya, Sales funnel itu seperti apa? Market yang niche apa yang sedang ditargetkan? Apa pertannyaan paling umum untuk customer suport? bagaimana produk kita berbeda dengan produk kompetitor?\n\n#### Pertanyaan & Jawaban\n\nQ: Apakah kalian mencoba untuk mengerti dari sisi bisnis sebelum programming sesuatu?\n\n- Michael Lancaster (BlackBerry):\n\n\tTergantung pada kerumitan pekeraan dan waktu. Karena kadang kita juga bisa menyelesaikan pekerjaan tanpa tau bisnis sama sekali.\n\t\n\tKarena itu, semakin banyak kami tau tentangbinis ini, semakin berharga kami bagi tim karena itu memungkinkan kami untuk menggunakan pengetahuan teknnis dan bisnis kami untuk memberikan kontribusi lebih besar.\n\t\n### Habit 8: [[Side Projects]]\n\nPasti kalian sudah tau kalo twitter, craiglist dan slack dimulai sebagai side project. ya side project, yang bisa sebesar sekarang. Side project dapat membantu kita mengembangkan portofolio lo, membuat resume, memamerkan keahlian lo. \n\nKalo lo udah mapan dalam karir lo, side project bisa sangat berguna. memungkinkan lo untuk mengalami dan mempelajari keterampilan baru yang mungkin gak ada dikerjaan lo. Juga gak ada tekanan, jadwal atau spesifikasi yang dipaksakan oleh  siapapun, yang artinya  lo bisa menggunakan semua kreativitas lo dan bersenang senang melakukannya.\n\nLangkah apa yang selanjutnya? Ide apa yang layak dikerjakan?\n\nIni adalah daftar pertanyaan yang biasanya gw tanyakan ke dirisendiri sebelum memulai project sampingan baru.\n\n1. Side project berarti lo harus mengorbankan waktu pribadi untuk mengerjakan project itu. Pertanyaannya:\n\n\t> Apakah saya benar benar menikmati subject, bidang pada jenis pekerjaan ini?\n\t\n\tJika jawabannya **tidak**, ya gak usah, kalau dikerjakan pun gak dapet apa apa dan biasanya terbengkalai.\n\n2. Butuh waktu untuk side project untuk mendapkatkan traction, pertanyaannya:\n\t\n\t> Apakah saya bersedia setidaknya 5 tahun untuk mengerjakan ide ini?\n\n\tKalau jawabannya **tidak**, kemungkinan besar anda akan kehilangan motivasi dan akan menyerah pada proyek inisebelum dimulai. namun, jika tujuan lo hanya untuk bereksperimen ya gak perlu khawatir.\n\n3. Memiliki ide adalah sau hal, memiliki kemampuan untuk mengeksekusi ide itu sama sekali berbeda, jadi lo harus tanya ke diri sendiri. \n\t\n\t> Bisakah saya menjalankan ide ini sendirian?\n\n\tKalau jawabannya **tidak**, lo perlu mempertimbangkan untuk mempelajari keterampilan baru atau mengundang seorang teman untuk mengisi kekosongan tersebut.\n\t\n4. Mengatakan **Ya** untuk satu ide berarti mengatakan tidak untuk banyak ide lain. Jadi tanyakan sama diri lo\n\n\t> Apakah ide ini lebih baik dari ide lain?\n\t> Apakah ada ide lain yang dapat menggunakan waktu saya dengan baik?\n\t\n\tKalau jawabannya **tidak**,  ulangi siklus ini untuk ide yang lain.\n\n5. Memahamu untuk siapa lo membangun solusi ini, Jika lo gak kenal audiens lo kemungkinan besar lo gak akan memahami kebutuhan mereka. jadi tanyakan pada diri lo:\n\n\t> Apakah saya secara pribadi mengalami hal ini atau saya memecahkannya untuk orang lain?\n\n\tKalau jawabannya **tidak**,  maka pertimbangkan untuk menjangkau orang orang yang benar benar mengalami rasa sakit yang coba anda selesaikan.\n\t\n6. Dan pertanyaan terakhir adalah \n\t\n\t> Mengapa saya senang dengan ide ini sekarang?\n\t> Apakah lo pengen mempelajari teknologi baru?\n\t> Apakah lo ingin menghasilkan lebih banyak uang?\n\t> Apakah lo membutuhkan pengalian dari masalah lain?\n\n\tJujur pada diri sendiri. Hal yang lebih penting dari memilih ide adalah memilih scope dari project lo.\n\n#### Yang harus dilakukan\n\nSelama beberapa hari kedepan perhatikan aplikasi yang sering lo gunakan. Apakah yang kurang dari mereka? Apakah lo dapat membuat versi lebih baik dari itu\n\n#### Pertanyaan & Jawaban\n\n### Habit 9: Mario or Sonic?\n#### Yang harus dilakukan\n#### Pertanyaan & Jawaban\n\n## Part Five: Team Habits\n\n### Habit 10: Active Listening\n#### Yang harus dilakukan\n#### Pertanyaan & Jawaban\n\n### Habit 11: Don’t Underestimate\n#### Yang harus dilakukan\n#### Pertanyaan & Jawaban\n\n### Habit 12: Specialist vs. Generalist\n#### Yang harus dilakukan\n#### Pertanyaan & Jawaban\n\n## Part Six: Life Habits\n\n### Habit 13: Control Your Variables\n#### Yang harus dilakukan\n#### Pertanyaan & Jawaban\n\n### Habit 14: Stop Waiting\n#### Yang harus dilakukan\n#### Pertanyaan & Jawaban\n\n## Part Seven: The End\n","n":0.018}}}]}
