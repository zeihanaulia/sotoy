{"pageProps":{"note":{"id":"ov1jn2bwsgt3mj88r7ddiss","title":"Nixos on Windows","desc":"","updated":1746161590837,"created":1746161248147,"custom":{},"fname":"til.nix.nixos-on-windows","type":"note","vault":{"fsPath":"vault"},"contentHash":"cc3f38b43cd7e5446451040c02a03c20","links":[],"anchors":{"nixos-di-wsl--biar-setup-dev-lo-gak-ribet-tiap-ganti-laptop":{"type":"header","text":"NixOS di WSL â€” Biar Setup Dev Lo Gak Ribet Tiap Ganti Laptop","value":"nixos-di-wsl--biar-setup-dev-lo-gak-ribet-tiap-ganti-laptop","line":8,"column":0,"depth":2},"kenapa-gak-cukup-pakai-ubuntu--nix":{"type":"header","text":"Kenapa Gak Cukup Pakai Ubuntu + Nix?","value":"kenapa-gak-cukup-pakai-ubuntu--nix","line":16,"column":0,"depth":3},"install-nixos-di-wsl":{"type":"header","text":"Install NixOS di WSL","value":"install-nixos-di-wsl","line":28,"column":0,"depth":3},"konfigurasi-awal":{"type":"header","text":"Konfigurasi Awal","value":"konfigurasi-awal","line":59,"column":0,"depth":3},"lokasi-file-nix":{"type":"header","text":"Lokasi File Nix","value":"lokasi-file-nix","line":80,"column":0,"depth":3},"testing-basic-dev-setup":{"type":"header","text":"Testing Basic Dev Setup","value":"testing-basic-dev-setup","line":90,"column":0,"depth":3},"whats-next":{"type":"header","text":"What's Next?","value":"whats-next","line":108,"column":0,"depth":3},"penutup":{"type":"header","text":"Penutup","value":"penutup","line":127,"column":0,"depth":3}},"children":[],"parent":"bgwu895vww7e5evg117ucl3","data":{}},"body":"<h1 id=\"nixos-on-windows\">Nixos on Windows<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#nixos-on-windows\"></a></h1>\n<h2 id=\"nixos-di-wsl--biar-setup-dev-lo-gak-ribet-tiap-ganti-laptop\">NixOS di WSL â€” Biar Setup Dev Lo Gak Ribet Tiap Ganti Laptop<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#nixos-di-wsl--biar-setup-dev-lo-gak-ribet-tiap-ganti-laptop\"></a></h2>\n<p>Gue udah capek tiap kali pindah laptop atau reinstall sistem harus setup ulang environment satu per satu. Install ini itu, copy config, lupa set env var, dan akhirnya... gak konsisten. Padahal kan pengennya begitu install, semua langsung jalan kaya sebelumnya.</p>\n<p>Makanya, gue mutusin buat pindah ke NixOS. Nantinya setup development env gue di wsl atau di MacOS akan sama. Tujuan akhirnya: dev environment yang deklaratif dan reproducible.</p>\n<hr>\n<h3 id=\"kenapa-gak-cukup-pakai-ubuntu--nix\">Kenapa Gak Cukup Pakai Ubuntu + Nix?<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#kenapa-gak-cukup-pakai-ubuntu--nix\"></a></h3>\n<p>Gue sempet nyobain itu juga. Di WSL Ubuntu, lo bisa install <code>nix</code>, terus setup environment lo lewat <code>nix-env</code>, <code>nix profile</code>, bahkan <code>home-manager</code>. Tapi hasilnya agak laen sih wkwkwk, environment lo seolah ditiban di atas Ubuntu. Kernel, systemd, dan banyak hal lain tetap milik Ubuntu. Yang gue dapet cuma <code>nix</code>-based package manager, bukan full declarative system.</p>\n<p>Dan ya, waktu itu gue juga ngalamin beberapa issue aneh. Salah satunya tentang path resolution di dalam WSL Ubuntu yang bikin environment keacak, terutama kalau lo setup pake <code>.bashrc</code>/<code>.zshrc</code> terus dijalanin lewat flake. Ada juga masalah PATH yang berantakan karena colokan antara Windows dan Linux. Gue dokumentasiin juga di sini:</p>\n<p>ðŸ‘‰ <a href=\"https://zeihanaulia.github.io/sotoy/notes/57q7jyz0wff078xaz4s6eea\">Recovering from a Broken Nix Wsl Setup</a></p>\n<p>Intinya, pendekatan \"Ubuntu + Nix\" bisa dibilang setengah jalan. Kayak lo pengen declarative, tapi fondasinya tetep mutable. Jadi nantinya setiap mau setup atau instalasi baru cuma bisa lewat declarative config ini. </p>\n<hr>\n<h3 id=\"install-nixos-di-wsl\">Install NixOS di WSL<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#install-nixos-di-wsl\"></a></h3>\n<p>Pertama, download image <code>.wsl</code> dari GitHub release-nya:\nâ†’ <a href=\"https://github.com/nix-community/NixOS-WSL/releases\">https://github.com/nix-community/NixOS-WSL/releases</a></p>\n<p>Setelah itu, import ke WSL pake PowerShell:</p>\n<pre class=\"language-powershell\"><code class=\"language-powershell\">wsl <span class=\"token operator\">--</span>import NixOS C:\\Distros\\NixOS <span class=\"token punctuation\">.</span>\\Downloads\\nixos<span class=\"token punctuation\">.</span>wsl <span class=\"token operator\">--</span>version 2\n</code></pre>\n<ul>\n<li><code>NixOS</code> di situ nama instance-nya. Lo bisa namain ini apa pun sih.</li>\n<li><code>C:\\Distros\\NixOS</code> itu direktori tempat disimpannya data <code>.ext4</code></li>\n<li>file <code>.wsl</code> tadi yang udah lo download</li>\n</ul>\n<p>Kalau lo mau bikin instance kedua buat testing atau sandbox, tinggal ganti nama dan path:</p>\n<pre class=\"language-powershell\"><code class=\"language-powershell\">wsl <span class=\"token operator\">--</span>import NixTest C:\\Distros\\NixTest <span class=\"token punctuation\">.</span>\\Downloads\\nixos<span class=\"token punctuation\">.</span>wsl <span class=\"token operator\">--</span>version 2\n</code></pre>\n<p>Abis itu, lo tinggal masuk:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">wsl -d NixOS\n</code></pre>\n<p>Lo bakal disambut dengan shell bash kosong. Gak ada <code>zsh</code>, gak ada <code>nvim</code>, belum ada flake juga. Tapi ini udah NixOS beneran.</p>\n<hr>\n<h3 id=\"konfigurasi-awal\">Konfigurasi Awal<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#konfigurasi-awal\"></a></h3>\n<p>Tambahin ini ke <code>.bashrc</code> lo supaya fitur flake bisa jalan:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token builtin class-name\">echo</span> <span class=\"token string\">'export NIX_CONFIG=\"experimental-features = nix-command flakes\"'</span> <span class=\"token operator\">>></span> ~/.bashrc\n<span class=\"token builtin class-name\">source</span> ~/.bashrc\n</code></pre>\n<p>Setelah itu tes apakah environment-nya udah siap:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">nix <span class=\"token builtin class-name\">eval</span> nixpkgs<span class=\"token comment\">#hello</span>\nnix shell nixpkgs<span class=\"token comment\">#bat</span>\nbat --version\n</code></pre>\n<p>Kalau semua jalan, berarti base system udah siap. Nix bisa resolve package, download derivation, dan aktifin shell-nya.</p>\n<hr>\n<h3 id=\"lokasi-file-nix\">Lokasi File Nix<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#lokasi-file-nix\"></a></h3>\n<p>Secara default, Nix nyimpen semua derivation dan build result lo di <code>/nix/store</code>. Karena lo lagi di WSL, partisi ini diemount dari file <code>.ext4</code> yang lo simpan waktu import tadi.</p>\n<p>Misal tadi lo import ke <code>C:\\Distros\\NixOS</code>, maka file ext4-nya ada di situ. Di dalam situ ya semua file yang dibaca Nix.</p>\n<p>Menariknya, bahkan kalau lo <code>ls /nix</code>, itu cuma symlink ke isi mount. Tapi NixOS-WSL udah handle semua mount-nya otomatis.</p>\n<hr>\n<h3 id=\"testing-basic-dev-setup\">Testing Basic Dev Setup<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#testing-basic-dev-setup\"></a></h3>\n<p>Lo bisa cobain mulai dari command sederhana:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">nix shell nixpkgs<span class=\"token comment\">#bat</span>\n</code></pre>\n<p>Masuk ke shell itu dan jalanin:</p>\n<pre class=\"language-bash\"><code class=\"language-bash\">bat --version\n</code></pre>\n<p>Kalau jalan, artinya <code>nixpkgs</code> lo up to date dan semua udah siap dipake.</p>\n<hr>\n<h3 id=\"whats-next\">What's Next?<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#whats-next\"></a></h3>\n<p>Gue udah bikin struktur awal kayak gini:</p>\n<pre><code>flake.nix\nflake.lock\n/home/\n  zeihanaulia.nix\n/modules/\n  dev-tools.nix\n</code></pre>\n<p>Tujuannya jelas: gue pengen punya satu file <code>flake.nix</code> yang bisa dipake buat install semua dev tools, shell config, editor setup, bahkan CLI-CLI kecil yang biasa gue pake tiap hari.</p>\n<p>Gue juga rencanain pake <code>home-manager</code> supaya semua user config (git, shell, aliases, dll) bisa diatur dari 1 tempat. Tapi itu di langkah berikutnya.</p>\n<hr>\n<h3 id=\"penutup\">Penutup<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#penutup\"></a></h3>\n<p>Yang penting sekarang, gue udah punya pondasi: WSL + NixOS yang proper, gak half-baked. Gak perlu ribet tiap kali ganti laptop atau setup baru. Semua tinggal pull repo dan <code>nixos-rebuild</code>.</p>\n<p>Kalau lo juga pengen dev environment yang gak cuma \"works on my machine\", tapi bisa dibangun ulang dengan satu command, menurut gue ini worth banget dicoba.</p>\n<p>Mau lanjut ke bagian flake setup dan home-manager? Gas. Kita bikin sampe lo tinggal <code>nixos-rebuild switch</code> dan semuanya siap tempur.</p>","noteIndex":{"id":"oqxmejlafk9x8rj9t5hya5z","title":"Hello and Welcome! ðŸ‘‹","desc":"","updated":1742030256619,"created":1646842475821,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"vault"},"contentHash":"f7db9d96297496e598d70248ef16b81f","links":[],"anchors":{"find-more":{"type":"header","text":"Find More","value":"find-more","line":20,"column":0,"depth":2}},"children":["spfwom01chbihki1twghclf","bsv930j2j6qlih60c7eu7wh","ohf85tu5nw2b8ewx6cetsmp","u3lhhpriar8wgcjw8svapha","tvdcga33h6hi7fxd9cwqd66"],"parent":null,"data":{},"body":"\nWelcome to the homepage! I use Dendron to store and organize notes, ideas, and experiments Iâ€™m working on. Here are the main sections youâ€™ll find on this site:\n\n1. **Learning Notes** â€” Practical notes on programming, recent technologies, and productivity tips.\n2. **Personal Projects** â€” Summaries of projects, experiments, and outcomes Iâ€™m working on or have completed.\n3. **Writings & Opinions** â€” Casual articles and reflections about technology, daily life, and other interesting topics.\n\nIâ€™m constantly experimenting and learning. I hope the content here helps you as a reference, a starting point for discussion, or just light reading.\n\n> Why Dendron?\n>\nDendron helps keep notes organized. Its \"seed\" and \"vault\" concepts make it easy to structure content and find what you need.\n\n## Find More\n\nIf you want to learn more or connect, check these links:\n\n- [Homepage (Dendron)](https://zeihanaulia.github.io/sotoy/)\n- [My GitHub](https://github.com/zeihanaulia)\n- [My Twitter / X](https://x.com/zeihanaulia)\n\nThanks for stopping by. If you have feedback or want to chat, feel free to reach out.\n"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":true,"vaultSelectionModeOnCreate":"smart","leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2}},"randomNote":{},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"dendronVersion":"0.83.0","vaults":[{"fsPath":"vault"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"enableUserTags":true,"enableHashTags":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":false,"enableEditorDecorations":true,"maxPreviewsCached":10,"maxNoteLength":204800,"seeds":{"dendron.templates":{}},"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":true,"siteRootDir":"docs","seo":{"title":"Sotoy","description":"Personal knowledge space about anything I learn. Notes, knowledge, and ideas from me.","author":"Zeihan Aulia","twitter":"zeihanaulia","image":{"url":"https://pbs.twimg.com/profile_images/502375255256485888/1UYtt7PT_400x400.jpeg","alt":"Software Engineer, "}},"github":{"enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"main","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","assetsPrefix":"/sotoy","siteUrl":"https://zeihanaulia.github.io","duplicateNoteBehavior":{"action":"useVault","payload":["vault-private","vault","dendron.templates"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}